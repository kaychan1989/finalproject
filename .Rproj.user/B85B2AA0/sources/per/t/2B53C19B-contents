---
title: "Trauma-informed messages"
output: 
  flexdashboard::flex_dashboard:
    theme: journal
    source_code: embed
    storyboard: true
    orientation: rows
    vertical_layout: fill

---

<style>
    .navbar {
      margin: 0;
      padding: 0;
      height: 5%;
      display: block;
      position: fixed
    }
    </style>


```{r setup, include=FALSE}
##issue what does that mean by showing history using flexdashboard function and how can I faciliate you by letting you know which plot to grade.
library(flexdashboard)
library(shiny)
library(gganimate)
library(dygraphs)
library(tidyverse)
library(dplyr)
library(stargazer)
library(interactions)
library(expss)
library(extrafont)
library(cowplot)
library(gganimate)
library(transformr)
library(colorspace)
library(socviz)
library(GGally)
library(Hmisc)
library(lavaan)
library(tidygraph)
library(ggraph)
library(semPlot)
library(knitr)
library(ggridges)
library(cowplot)



```


Research Background
=================

In response to a high prevalence of childhood trauma, which impacts approximatelt 61% of American adults [(CDC, 2021)] (https://www.cdc.gov/violenceprevention/aces/fastfact.html), and domestic violence, which affects more than one-fourth of American women [(CDC, 2021)] (https://ncadv.org/STATISTICS), the current randomized controlled trial examines the effects of trauma-informed messages (TIM) on attitudes towards domestic violence. As trauma and domestic violence often relate to psychosocial traits, such as borderline personality disorder symptoms, adverse childhood experiences, attachment styles towards a parental figure, information processing patterns (i.e., need for cognition and faith intuition), and fear of an intimate partner, those variables are examined as potential  moderators to identify vulnerable female groups. Assessed attitudinal outcomes include trauma knowledge, domestic violence self-efficacy, perceived internal resources to terminate an intimate abusive relationship, perceived tradeoffs, perceived social support, self-efficay, and intention to end the relationship.  The project features data visualization to provide a holistic understanding of TIM efficacy and effectiveness. 


**Participants**

Participants are female MTurk workers (n = 289) self-reporting at least one of the six fear aspects of a current intimate partner using the fear scale () and at least one-adverse childhood experience on the ACE scale () .

**Method**
 
Participants were randomly assigned into a) treatment condition (reading a trauma-informed narrative about domestic violence), and b) control condition (reading a traitional narrative about domestic violence). Narratives in both experimental groups feature a fictional female character's experiences with her abusive parnter and a safety plan. A first-person narrative (i.e., using the pronoun "I") was employed across the two experimental conditions to avoid demographic biases. The trauma-informed condition features psychoeducaiton regarding the effects of trauma on one's cognition, emotion, and behaviors and empowerment. Prior the randomization process, participants answered questions regarding their psychosocial traits. Once participants read the narrative in their condition, they were asked to answer questions regarding domestic violence attitudes.

**Statistical analysis**

Two- and three-way interactions between experimental conditions (IV), social information processing patterns (Moderator 1), and psychosocial traits (Moderator 3) were explored using R package. The analysis and visualization codes are embeded (please see Embeded Codes for the detail).

For more detail regarding research backgroud, method, and measurement, please email: karikarn@uoregon.edu.



Tables and results
======

column {.sidebar .tabset data-width=650}
---------------------
### Results

This section features the results of two-ways and three-ways interaction between conditions, psychosocial traits, and information processing patterns: need for cognition (NFC) and faith intuition (FI). Only significant interaction models are featured in the tables.  


### Three-ways interaction 

Condition x NFC x psychosocial traits


### Table1 

Avoidance towards a mother figure


```{r}
data<-rio::import(here::here("Bigdata.sav"))
```

```{r}
data$Condition <- factor(data$Condition, 
                         levels =c(0,1), 
                         labels = c("Control", "Treatment"))
```

```{r, echo = FALSE}
#Create models according to DVs
model1Mavo<-lm(Trauma_Knowledge~Condition+NFC+Mom_avoidance+Condition*Mom_avoidance+Mom_avoidance*NFC+Condition*NFC+Condition*NFC*Mom_avoidance, data)

```


```{r, echo = FALSE}
model2Mavo<-lm(DVS_state~Condition+NFC+Mom_avoidance+Condition*Mom_avoidance+Mom_avoidance*NFC+Condition*NFC+Condition*NFC*Mom_avoidance, data)
```


```{r, echo = FALSE}
model3Mavo<-lm(Empowerment_InternalTools~Condition+NFC+Mom_avoidance+Condition*Mom_avoidance+Mom_avoidance*NFC+Condition*NFC+Condition*NFC*Mom_avoidance, data)
```


```{r, echo = FALSE}
model4Mavo<-lm(Empowerment_Tradeoffs~Condition+NFC+Mom_avoidance+Condition*Mom_avoidance+Mom_avoidance*NFC+Condition*NFC+Condition*NFC*Mom_avoidance, data)


```


```{r, echo = FALSE}
model5Mavo<-lm(Empowerment_ExpectationSupport~Condition+NFC+Mom_avoidance+Condition*Mom_avoidance+Mom_avoidance*NFC+Condition*NFC+Condition*NFC*Mom_avoidance, data)

```


```{r, echo = FALSE}
model6Mavo<-lm(SelfCompassion~Condition+NFC+Mom_avoidance+Condition*Mom_avoidance+Mom_avoidance*NFC+Condition*NFC+Condition*NFC*Mom_avoidance, data)


```


```{r, echo = FALSE}
model7Mavo<-lm(In_End~Condition+NFC+Mom_avoidance+Condition*Mom_avoidance+Mom_avoidance*NFC+Condition*NFC+Condition*NFC*Mom_avoidance, data)


```



```{r, echo = FALSE, results = 'asis'}

#issue how to get aterisk at the pvalues and how to make the bold goes away
stargazer(model1Mavo, model2Mavo, model3Mavo, model4Mavo, model5Mavo, model6Mavo, model7Mavo,
          
          title =  "Table 1. F and t-statistics of rational thinking and avoidance attachment to a mother figure as the moderators.",
          df =F,
          dep.var.labels =c("Trauma knowledge", "Self-efficacy", "Internal tools", "Tradeoffs", "Social support", "Self-compassion", "Leaving intention"),
          covariate.labels = c("Constant",
                               "Condition", 
                               "NFC",
                               "Avoidance",
                          "ConditionxAvoidance", 
                               "NFCxAvoidance",
                          "ConditionxNFC",
                           "ConditionxNFCxAvoidance"),
        
          
          type = "html", 
          align = TRUE, 
  
         
    
          intercept.bottom = F,
          intercept.top = T,
          digits = 2,
          single.row = T, out="Table1"
          )
```

### Table2 

Anxiety towards a mother figure


```{r}
data<-rio::import(here::here("Bigdata.sav"))
```

```{r}
data$Condition <- factor(data$Condition, 
                         levels =c(0,1), 
                         labels = c("Control", "Treatment"))
```

```{r, echo = FALSE}
#Create models according to DVs
model1Mavo<-lm(Trauma_Knowledge~Condition+NFC+Mom_anxiety+Condition*Mom_anxiety+Mom_anxiety*NFC+Condition*NFC+Condition*NFC*Mom_anxiety, data)

```


```{r, echo = FALSE}
model2Mavo<-lm(DVS_state~Condition+NFC+Mom_anxiety+Condition*Mom_anxiety+Mom_anxiety*NFC+Condition*NFC+Condition*NFC*Mom_anxiety, data)
```


```{r, echo = FALSE}
model3Mavo<-lm(Empowerment_InternalTools~Condition+NFC+Mom_anxiety+Condition*Mom_anxiety+Mom_anxiety*NFC+Condition*NFC+Condition*NFC*Mom_anxiety, data)
```


```{r, echo = FALSE}
model4Mavo<-lm(Empowerment_Tradeoffs~Condition+NFC+Mom_anxiety+Condition*Mom_anxiety+Mom_anxiety*NFC+Condition*NFC+Condition*NFC*Mom_anxiety, data)


```


```{r, echo = FALSE}
model5Mavo<-lm(Empowerment_ExpectationSupport~Condition+NFC+Mom_anxiety+Condition*Mom_anxiety+Mom_anxiety*NFC+Condition*NFC+Condition*NFC*Mom_anxiety, data)

```


```{r, echo = FALSE}
model6Mavo<-lm(SelfCompassion~Condition+NFC+Mom_anxiety+Condition*Mom_anxiety+Mom_anxiety*NFC+Condition*NFC+Condition*NFC*Mom_anxiety, data)


```


```{r, echo = FALSE}
model7Mavo<-lm(In_End~Condition+NFC+Mom_anxiety+Condition*Mom_anxiety+Mom_anxiety*NFC+Condition*NFC+Condition*NFC*Mom_anxiety, data)


```



```{r, echo = FALSE, results = 'asis'}

stargazer(model1Mavo, model2Mavo, model3Mavo, model4Mavo, model5Mavo, model6Mavo, model7Mavo,
          
          title =  "Table 2. F and t-statistics of rational thinking and anxiety attachment to a mother figure as moderators.",
          df =F,
          dep.var.labels =c("Trauma knowledge", "Self-efficacy", "Internal tools", "Tradeoffs", "Social support", "Self-compassion", "Leaving intention"),
          covariate.labels = c("Constant",
                               "Condition", 
                               "NFC",
                               "Anxiety",
                          "ConditionxAnxiety", 
                               "NFCxAnxiety",
                          "ConditionxNFC",
                           "ConditionxNFCxAnxiety"),
        
          
          type = "html", 
          align = TRUE, 
  
         
    
          intercept.bottom = F,
          intercept.top = T,
          digits = 2,
          single.row = T, out="Table2"
          )
```


### Table 3 

Avoidance towards a father figure

```{r}
data<-rio::import(here::here("Bigdata.sav"))
```

```{r}
data$Condition <- factor(data$Condition, 
                         levels =c(0,1), 
                         labels = c("Control", "Treatment"))
```

```{r, echo = FALSE}
#Create models according to DVs
model1Mavo<-lm(Trauma_Knowledge~Condition+NFC+Dad_avoidance+Condition*Dad_avoidance+Dad_avoidance*NFC+Condition*NFC+Condition*NFC*Dad_avoidance, data)

```


```{r, echo = FALSE}
model2Mavo<-lm(DVS_state~Condition+NFC+Dad_avoidance+Condition*Dad_avoidance+Dad_avoidance*NFC+Condition*NFC+Condition*NFC*Dad_avoidance, data)
```


```{r, echo = FALSE}
model3Mavo<-lm(Empowerment_InternalTools~Condition+NFC+Dad_avoidance+Condition*Dad_avoidance+Dad_avoidance*NFC+Condition*NFC+Condition*NFC*Dad_avoidance, data)
```


```{r, echo = FALSE}
model4Mavo<-lm(Empowerment_Tradeoffs~Condition+NFC+Dad_avoidance+Condition*Dad_avoidance+Dad_avoidance*NFC+Condition*NFC+Condition*NFC*Dad_avoidance, data)


```


```{r, echo = FALSE}
model5Mavo<-lm(Empowerment_ExpectationSupport~Condition+NFC+Dad_avoidance+Condition*Dad_avoidance+Dad_avoidance*NFC+Condition*NFC+Condition*NFC*Dad_avoidance, data)

```


```{r, echo = FALSE}
model6Mavo<-lm(SelfCompassion~Condition+NFC+Dad_avoidance+Condition*Dad_avoidance+Dad_avoidance*NFC+Condition*NFC+Condition*NFC*Dad_avoidance, data)


```


```{r, echo = FALSE}
model7Mavo<-lm(In_End~Condition+NFC+Dad_avoidance+Condition*Dad_avoidance+Dad_avoidance*NFC+Condition*NFC+Condition*NFC*Dad_avoidance, data)


```



```{r, echo = FALSE, results = 'asis'}

stargazer(model1Mavo, model2Mavo, model3Mavo, model4Mavo, model5Mavo, model6Mavo, model7Mavo,
          
          title =  "Table 3. F and t-statistics of rational thinking and avoidance attachment to a father figure as moderators.",
          df =F,
          dep.var.labels =c("Trauma knowledge", "Self-efficacy", "Internal tools", "Tradeoffs", "Social support", "Self-compassion", "Leaving intention"),
          covariate.labels = c("Constant",
                               "Condition", 
                               "NFC",
                               "Avoidance",
                          "ConditionxAvoidance", 
                               "NFCxAvoidance",
                          "ConditionxNFC",
                           "ConditionxNFCxAvoidance"),
        
          
          type = "html", 
          align = TRUE, 
  
         
    
          intercept.bottom = F,
          intercept.top = T,
          digits = 2,
          single.row = T, out="Table3"
          )
```

### Table 4 

Anxiety towards a father figure


```{r}
data<-rio::import(here::here("Bigdata.sav"))
```

```{r}
data$Condition <- factor(data$Condition, 
                         levels =c(0,1), 
                         labels = c("Control", "Treatment"))
```

```{r, echo = FALSE}
#Create models according to DVs
model1Mavo<-lm(Trauma_Knowledge~Condition+NFC+Dad_anxiety+Condition*Dad_anxiety+Dad_anxiety*NFC+Condition*NFC+Condition*NFC*Dad_anxiety, data)

```


```{r, echo = FALSE}
model2Mavo<-lm(DVS_state~Condition+NFC+Dad_anxiety+Condition*Dad_anxiety+Dad_anxiety*NFC+Condition*NFC+Condition*NFC*Dad_anxiety, data)
```


```{r, echo = FALSE}
model3Mavo<-lm(Empowerment_InternalTools~Condition+NFC+Dad_anxiety+Condition*Dad_anxiety+Dad_anxiety*NFC+Condition*NFC+Condition*NFC*Dad_anxiety, data)
```


```{r, echo = FALSE}
model4Mavo<-lm(Empowerment_Tradeoffs~Condition+NFC+Dad_anxiety+Condition*Dad_anxiety+Dad_anxiety*NFC+Condition*NFC+Condition*NFC*Dad_anxiety, data)


```


```{r, echo = FALSE}
model5Mavo<-lm(Empowerment_ExpectationSupport~Condition+NFC+Dad_anxiety+Condition*Dad_anxiety+Dad_anxiety*NFC+Condition*NFC+Condition*NFC*Dad_anxiety, data)

```


```{r, echo = FALSE}
model6Mavo<-lm(SelfCompassion~Condition+NFC+Dad_anxiety+Condition*Dad_anxiety+Dad_anxiety*NFC+Condition*NFC+Condition*NFC*Dad_anxiety, data)


```


```{r, echo = FALSE}
model7Mavo<-lm(In_End~Condition+NFC+Dad_anxiety+Condition*Dad_anxiety+Dad_anxiety*NFC+Condition*NFC+Condition*NFC*Dad_anxiety, data)

```



```{r, echo = FALSE, results = 'asis'}

stargazer(model1Mavo, model2Mavo, model3Mavo, model4Mavo, model5Mavo, model6Mavo, model7Mavo,
          
          title =  "Table 4. F and t-statistics of rational thinking and anxiety attachment to a father figure as moderators.",
          df =F,
          dep.var.labels =c("Trauma knowledge", "Self-efficacy", "Internal tools", "Tradeoffs", "Social support", "Self-compassion", "Leaving intention"),
          covariate.labels = c("Constant",
                               "Condition", 
                               "NFC",
                               "Anxieyu",
                          "ConditionxAnxiety", 
                               "NFCxAnxiety",
                          "ConditionxNFC",
                           "ConditionxNFCxAnxiety"),
        
          
          type = "html", 
          align = TRUE, 
  
         
    
          intercept.bottom = F,
          intercept.top = T,
          digits = 2,
          single.row = T, out="Table4"
          )
```

### Three-ways interaction 

Condition x FI x psychosocial traits


### Table 5 

Adverse childhood experience (ACE)


```{r}
data<-rio::import(here::here("Bigdata.sav"))
```

```{r}
data$Condition <- factor(data$Condition, 
                         levels =c(0,1), 
                         labels = c("Control", "Treatment"))
```

```{r, echo = FALSE}
#Create models according to DVs
model1Mavo<-lm(Trauma_Knowledge~Condition+FI+ACE+Condition*ACE+ACE*FI+Condition*FI+Condition*FI*ACE, data)

```


```{r, echo = FALSE}
model2Mavo<-lm(DVS_state~Condition+FI+ACE+Condition*ACE+ACE*FI+Condition*FI+Condition*FI*ACE, data)
```


```{r, echo = FALSE}
model3Mavo<-lm(Empowerment_InternalTools~Condition+FI+ACE+Condition*ACE+ACE*FI+Condition*FI+Condition*FI*ACE, data)
```


```{r, echo = FALSE}
model4Mavo<-lm(Empowerment_Tradeoffs~Condition+FI+ACE+Condition*ACE+ACE*FI+Condition*FI+Condition*FI*ACE, data)


```


```{r, echo = FALSE}
model5Mavo<-lm(Empowerment_ExpectationSupport~Condition+FI+ACE+Condition*ACE+ACE*FI+Condition*FI+Condition*FI*ACE, data)

```


```{r, echo = FALSE}
model6Mavo<-lm(SelfCompassion~Condition+FI+ACE+Condition*ACE+ACE*FI+Condition*FI+Condition*FI*ACE, data)


```


```{r, echo = FALSE}
model7Mavo<-lm(In_End~Condition+FI+ACE+Condition*ACE+ACE*FI+Condition*FI+Condition*FI*ACE, data)

```



```{r, echo = FALSE, results = 'asis'}

stargazer(model1Mavo, model2Mavo, model3Mavo, model4Mavo, model5Mavo, model6Mavo, model7Mavo,
          
          title =  "Table 5. F and t-statistics of emotional thinking and adverse childhood experiences as moderators.",
          df =F,
          dep.var.labels =c("Trauma knowledge", "Self-efficacy", "Internal tools", "Tradeoffs", "Social support", "Self-compassion", "Leaving intention"),
          covariate.labels = c("Constant",
                               "Condition", 
                               "FI",
                               "ACE",
                          "ConditionxACE", 
                               "FIxACE",
                          "ConditionxFI",
                           "ConditionxFIxACE"),
        
          
          type = "html", 
          align = TRUE, 
  
         
    
          intercept.bottom = F,
          intercept.top = T,
          digits = 2,
          single.row = T, out="Table5"
          )
```


### Table 6 

Fear of an inimate partner


```{r}
data<-rio::import(here::here("Bigdata.sav"))
```

```{r}
data$Condition <- factor(data$Condition, 
                         levels =c(0,1), 
                         labels = c("Control", "Treatment"))
```

```{r, echo = FALSE}
#Create models according to DVs
model1Mavo<-lm(Trauma_Knowledge~Condition+FI+Fear+Condition*Fear+Fear*FI+Condition*FI+Condition*FI*Fear, data)

```


```{r, echo = FALSE}
model2Mavo<-lm(DVS_state~Condition+FI+Fear+Condition*Fear+Fear*FI+Condition*FI+Condition*FI*Fear, data)
```


```{r, echo = FALSE}
model3Mavo<-lm(Empowerment_InternalTools~Condition+FI+Fear+Condition*Fear+Fear*FI+Condition*FI+Condition*FI*Fear, data)
```


```{r, echo = FALSE}
model4Mavo<-lm(Empowerment_Tradeoffs~Condition+FI+Fear+Condition*Fear+Fear*FI+Condition*FI+Condition*FI*Fear, data)


```


```{r, echo = FALSE}
model5Mavo<-lm(Empowerment_ExpectationSupport~Condition+FI+Fear+Condition*Fear+Fear*FI+Condition*FI+Condition*FI*Fear, data)

```


```{r, echo = FALSE}
model6Mavo<-lm(SelfCompassion~Condition+FI+Fear+Condition*Fear+Fear*FI+Condition*FI+Condition*FI*Fear, data)


```


```{r, echo = FALSE}
model7Mavo<-lm(In_End~Condition+FI+Fear+Condition*Fear+Fear*FI+Condition*FI+Condition*FI*Fear, data)

```



```{r, echo = FALSE, results = 'asis'}

stargazer(model1Mavo, model2Mavo, model3Mavo, model4Mavo, model5Mavo, model6Mavo, model7Mavo,
          
          title =  "Table 6. F and t-statistics of emotional thinking and fear of an intimate partner as moderators.",
          df =F,
          dep.var.labels =c("Trauma knowledge", "Self-efficacy", "Internal tools", "Tradeoffs", "Social support", "Self-compassion", "Leaving intention"),
          covariate.labels = c("Constant",
                               "Condition", 
                               "FI",
                               "Fear",
                          "ConditionxFear", 
                               "FIxFear",
                          "ConditionxFI",
                           "ConditionxFIxFear"),
        
          
          type = "html", 
          align = TRUE, 
  
         
    
          intercept.bottom = F,
          intercept.top = T,
          digits = 2,
          single.row = T, out="Table6"
          )
```


### Table 7 

Anxiety towards a mother figure


```{r}
data<-rio::import(here::here("Bigdata.sav"))
```

```{r}
data$Condition <- factor(data$Condition, 
                         levels =c(0,1), 
                         labels = c("Control", "Treatment"))
```

```{r, echo = FALSE}
#Create models according to DVs
model1Mavo<-lm(Trauma_Knowledge~Condition+FI+Mom_anxiety+Condition*Mom_anxiety+Mom_anxiety*FI+Condition*FI+Condition*FI*Mom_anxiety, data)

```


```{r, echo = FALSE}
model2Mavo<-lm(DVS_state~Condition+FI+Mom_anxiety+Condition*Mom_anxiety+Mom_anxiety*FI+Condition*FI+Condition*FI*Mom_anxiety, data)
```


```{r, echo = FALSE}
model3Mavo<-lm(Empowerment_InternalTools~Condition+FI+Mom_anxiety+Condition*Mom_anxiety+Mom_anxiety*FI+Condition*FI+Condition*FI*Mom_anxiety, data)
```


```{r, echo = FALSE}
model4Mavo<-lm(Empowerment_Tradeoffs~Condition+FI+Mom_anxiety+Condition*Mom_anxiety+Mom_anxiety*FI+Condition*FI+Condition*FI*Mom_anxiety, data)


```


```{r, echo = FALSE}
model5Mavo<-lm(Empowerment_ExpectationSupport~Condition+FI+Mom_anxiety+Condition*Mom_anxiety+Mom_anxiety*FI+Condition*FI+Condition*FI*Mom_anxiety, data)

```


```{r, echo = FALSE}
model6Mavo<-lm(SelfCompassion~Condition+FI+Mom_anxiety+Condition*Mom_anxiety+Mom_anxiety*FI+Condition*FI+Condition*FI*Mom_anxiety, data)


```


```{r, echo = FALSE}
model7Mavo<-lm(In_End~Condition+FI+Mom_anxiety+Condition*Mom_anxiety+Mom_anxiety*FI+Condition*FI+Condition*FI*Mom_anxiety, data)

```



```{r, echo = FALSE, results = 'asis'}

stargazer(model1Mavo, model2Mavo, model3Mavo, model4Mavo, model5Mavo, model6Mavo, model7Mavo,
          
          title =  "Table 7. F and t-statistics of emotional thinking and anxiety attachment towards a mother figure as moderators.",
          df =F,
          dep.var.labels =c("Trauma knowledge", "Self-efficacy", "Internal tools", "Tradeoffs", "Social support", "Self-compassion", "Leaving intention"),
          covariate.labels = c("Constant",
                               "Condition", 
                               "FI",
                               "Anxiety",
                          "ConditionxAnxiety", 
                               "FIxAnxiety",
                          "ConditionxFI",
                           "ConditionxFIxAnxiety"),
        
          
          type = "html", 
          align = TRUE, 
  
         
    
          intercept.bottom = F,
          intercept.top = T,
          digits = 2,
          single.row = T, out="Table7"
          )
```


### Two-ways interaction 

Conditions x psychosocial traits


### Table 8 

ACE


```{r}
data<-rio::import(here::here("Bigdata.sav"))
```

```{r}
data$Condition <- factor(data$Condition, 
                         levels =c(0,1), 
                         labels = c("Control", "Treatment"))
```

```{r, echo = FALSE}
#Create models according to DVs
model1Mavo<-lm(Trauma_Knowledge~Condition+ACE+Condition*ACE, data)

```


```{r, echo = FALSE}
model2Mavo<-lm(DVS_state~Condition+ACE+Condition*ACE, data)

```


```{r, echo = FALSE}
model3Mavo<-lm(Empowerment_InternalTools~Condition+ACE+Condition*ACE, data)

```


```{r, echo = FALSE}
model4Mavo<-lm(Empowerment_Tradeoffs~Condition+ACE+Condition*ACE, data)



```


```{r, echo = FALSE}
model5Mavo<-lm(Empowerment_ExpectationSupport~Condition+ACE+Condition*ACE, data)


```


```{r, echo = FALSE}
model6Mavo<-lm(SelfCompassion~Condition+ACE+Condition*ACE, data)



```


```{r, echo = FALSE}
model7Mavo<-lm(In_End~Condition+ACE+Condition*ACE, data)


```



```{r, echo = FALSE, results = 'asis'}

stargazer(model1Mavo, model2Mavo, model3Mavo, model4Mavo, model5Mavo, model6Mavo, model7Mavo,
          
          title =  "Table 8. F and t-statistics of  adverse childhood experience as the moderator.",
          df =F,
          dep.var.labels =c("Trauma knowledge", "Self-efficacy", "Internal tools", "Tradeoffs", "Social support", "Self-compassion", "Leaving intention"),
          covariate.labels = c("Constant",
                               "Condition", 
                               "ACE",
                               "ConditionxACE"),
        
          
          type = "html", 
          align = TRUE, 
  
         
    
          intercept.bottom = F,
          intercept.top = T,
          digits = 2,
          single.row = T, out="Table8"
          )
```


### Table 9 

Fear of a current intimate partner


```{r}
data<-rio::import(here::here("Bigdata.sav"))
```

```{r}
data$Condition <- factor(data$Condition, 
                         levels =c(0,1), 
                         labels = c("Control", "Treatment"))
```

```{r, echo = FALSE}
#Create models according to DVs
model1Mavo<-lm(Trauma_Knowledge~Condition+Fear+Condition*Fear, data)

```


```{r, echo = FALSE}
model2Mavo<-lm(DVS_state~Condition+Fear+Condition*Fear, data)

```


```{r, echo = FALSE}
model3Mavo<-lm(Empowerment_InternalTools~Condition+Fear+Condition*Fear, data)

```


```{r, echo = FALSE}
model4Mavo<-lm(Empowerment_Tradeoffs~Condition+Fear+Condition*Fear, data)



```


```{r, echo = FALSE}
model5Mavo<-lm(Empowerment_ExpectationSupport~Condition+Fear+Condition*Fear, data)


```


```{r, echo = FALSE}
model6Mavo<-lm(SelfCompassion~Condition+Fear+Condition*Fear, data)



```


```{r, echo = FALSE}
model7Mavo<-lm(In_End~Condition+Fear+Condition*Fear, data)


```



```{r, echo = FALSE, results = 'asis'}

stargazer(model1Mavo, model2Mavo, model3Mavo, model4Mavo, model5Mavo, model6Mavo, model7Mavo,
          
          title =  "Table 9. F and t-statistics of  fear of a current intimate partner as the moderator.",
          df =F,
          dep.var.labels =c("Trauma knowledge", "Self-efficacy", "Internal tools", "Tradeoffs", "Social support", "Self-compassion", "Leaving intention"),
          covariate.labels = c("Constant",
                               "Condition", 
                               "Fear",
                               "ConditionxFear"),
        
          
          type = "html", 
          align = TRUE, 
  
         
    
          intercept.bottom = F,
          intercept.top = T,
          digits = 2,
          single.row = T, out="Table9"
          )
```


### Table 10 

Borderline personality traits (BPD)


```{r}
data<-rio::import(here::here("Bigdata.sav"))
```

```{r}
data$Condition <- factor(data$Condition, 
                         levels =c(0,1), 
                         labels = c("Control", "Treatment"))
```

```{r, echo = FALSE}
#Create models according to DVs
model1Mavo<-lm(Trauma_Knowledge~Condition+BPD+Condition*BPD, data)

```


```{r, echo = FALSE}
model2Mavo<-lm(DVS_state~Condition+BPD+Condition*BPD, data)
```


```{r, echo = FALSE}
model3Mavo<-lm(Empowerment_InternalTools~Condition+BPD+Condition*BPD, data)

```


```{r, echo = FALSE}
model4Mavo<-lm(Empowerment_Tradeoffs~Condition+BPD+Condition*BPD, data)



```


```{r, echo = FALSE}
model5Mavo<-lm(Empowerment_ExpectationSupport~Condition+BPD+Condition*BPD, data)


```


```{r, echo = FALSE}
model6Mavo<-lm(SelfCompassion~Condition+BPD+Condition*BPD, data)



```


```{r, echo = FALSE}
model7Mavo<-lm(In_End~Condition+BPD+Condition*BPD, data)


```



```{r, echo = FALSE, results = 'asis'}

stargazer(model1Mavo, model2Mavo, model3Mavo, model4Mavo, model5Mavo, model6Mavo, model7Mavo,
          
          title =  "Table 10. F and t-statistics of borderline personality traits as the moderator.",
          df =F,
          dep.var.labels =c("Trauma knowledge", "Self-efficacy", "Internal tools", "Tradeoffs", "Social support", "Self-compassion", "Leaving intention"),
          covariate.labels = c("Constant",
                               "Condition", 
                               "BPD",
                               "ConditionxBPD"),
        
          
          type = "html", 
          align = TRUE, 
  
         
    
          intercept.bottom = F,
          intercept.top = T,
          digits = 2,
          single.row = T, out="Table10"
          )
```


### Table 11 

Anxious attachment towards a mother figure


```{r}
data<-rio::import(here::here("Bigdata.sav"))
```

```{r}
data$Condition <- factor(data$Condition, 
                         levels =c(0,1), 
                         labels = c("Control", "Treatment"))
```

```{r, echo = FALSE}
#Create models according to DVs
model1Mavo<-lm(Trauma_Knowledge~Condition+Mom_anxiety+Condition*Mom_anxiety, data)

```


```{r, echo = FALSE}
model2Mavo<-lm(DVS_state~Condition+Mom_anxiety+Condition*Mom_anxiety, data)
```


```{r, echo = FALSE}
model3Mavo<-lm(Empowerment_InternalTools~Condition+Mom_anxiety+Condition*Mom_anxiety, data)

```


```{r, echo = FALSE}
model4Mavo<-lm(Empowerment_Tradeoffs~Condition+Mom_anxiety+Condition*Mom_anxiety, data)



```


```{r, echo = FALSE}
model5Mavo<-lm(Empowerment_ExpectationSupport~Condition+Mom_anxiety+Condition*Mom_anxiety, data)


```


```{r, echo = FALSE}
model6Mavo<-lm(SelfCompassion~Condition+Mom_anxiety+Condition*Mom_anxiety, data)



```


```{r, echo = FALSE}
model7Mavo<-lm(In_End~Condition+Mom_anxiety+Condition*Mom_anxiety, data)


```



```{r, echo = FALSE, results = 'asis'}

stargazer(model1Mavo, model2Mavo, model3Mavo, model4Mavo, model5Mavo, model6Mavo, model7Mavo,
          
          title =  "Table 11. F and t-statistics of anxiety towards a mother figure as the moderator.",
          df =F,
          dep.var.labels =c("Trauma knowledge", "Self-efficacy", "Internal tools", "Tradeoffs", "Social support", "Self-compassion", "Leaving intention"),
          covariate.labels = c("Constant",
                               "Condition", 
                               "Anxiety",
                               "ConditionxAnxiety"),
        
          
          type = "html", 
          align = TRUE, 
  
         
    
          intercept.bottom = F,
          intercept.top = T,
          digits = 2,
          single.row = T, out="Table11"
          )
```

### Table 12 

Anxious attachment towards a father figure


```{r}
data<-rio::import(here::here("Bigdata.sav"))
```

```{r}
data$Condition <- factor(data$Condition, 
                         levels =c(0,1), 
                         labels = c("Control", "Treatment"))
```

```{r, echo = FALSE}
#Create models according to DVs
model1Mavo<-lm(Trauma_Knowledge~Condition+Dad_anxiety+Condition*Dad_anxiety, data)

```


```{r, echo = FALSE}
model2Mavo<-lm(DVS_state~Condition+Dad_anxiety+Condition*Dad_anxiety, data)
```


```{r, echo = FALSE}
model3Mavo<-lm(Empowerment_InternalTools~Condition+Dad_anxiety+Condition*Dad_anxiety, data)

```


```{r, echo = FALSE}
model4Mavo<-lm(Empowerment_Tradeoffs~Condition+Dad_anxiety+Condition*Dad_anxiety, data)


```


```{r, echo = FALSE}
model5Mavo<-lm(Empowerment_ExpectationSupport~Condition+Dad_anxiety+Condition*Dad_anxiety, data)

```


```{r, echo = FALSE}
model6Mavo<-lm(SelfCompassion~Condition+Dad_anxiety+Condition*Dad_anxiety, data)



```


```{r, echo = FALSE}
model7Mavo<-lm(In_End~Condition+Dad_anxiety+Condition*Dad_anxiety, data)


```



```{r, echo = FALSE, results = 'asis'}

stargazer(model1Mavo, model2Mavo, model3Mavo, model4Mavo, model5Mavo, model6Mavo, model7Mavo,
          
          title =  "Table 12. F and t-statistics of anxiety towards a father figure as the moderator.",
          df =F,
          dep.var.labels =c("Trauma knowledge", "Self-efficacy", "Internal tools", "Tradeoffs", "Social support", "Self-compassion", "Leaving intention"),
          covariate.labels = c("Constant",
                               "Condition", 
                               "Anxiety",
                               "ConditionxAnxiety"),
        
          
          type = "html", 
          align = TRUE, 
  
         
    
          intercept.bottom = F,
          intercept.top = T,
          digits = 2,
          single.row = T, out="Table12"
          )
```




Row {.tabset data-height=500}
---------------------
### Uncertainty 1(7)



Below are uncertainty plots of significant results from the interaction tables. Uncertainty A(B) represents uncertainty from Table A column B. 


```{r}

data<-rio::import(here::here("Bigdata.sav"))
```

```{r}
data$Condition <- factor(data$Condition, 
                         levels =c(0,1), 
                         labels = c("Control", "Treatment"))
```


```{r}
data$Intention<-data$In_End
data$Avoidance<-data$Mom_avoidance

```

```{r}
model7Mavo<-lm(Intention~Condition+NFC+Avoidance+Condition*Avoidance+Avoidance*NFC+Condition*NFC+Condition*NFC*Avoidance, data)


```


```{r}
un_model7Mavo<-broom::tidy(model7Mavo, conf.int = TRUE)

```



```{r}
un_model7Mavo<-subset(un_model7Mavo, term %nin% "(Intercept)")
un_model7Mavo$nicelabs <-prefix_strip(un_model7Mavo$term, "Condition")

```


```{r}
#adjust the size of the lines

p <- ggplot(un_model7Mavo, aes(nicelabs, estimate))+
    geom_hline(yintercept = 0,
             color = "cornflowerblue",
             linetype = 2) +
  geom_errorbar(aes(ymin = estimate + qnorm(.025)*std.error, 
                    ymax = estimate + qnorm(.975)*std.error,
                    color = "95%"),
                width = 0.2,
                size = 0.4) + 
  geom_errorbar(aes(ymin = estimate + qnorm(.05)*std.error, 
                    ymax = estimate + qnorm(.95)*std.error,
                    color = "90%"),
                width = 0.2,
                size = 0.6) + 
  geom_errorbar(aes(ymin = estimate + qnorm(.1)*std.error, 
                    ymax = estimate + qnorm(.9)*std.error,
                    color = "80%"),
                width = 0.2,
                size = 0.8)

```




```{r}
p<-p+ scale_color_viridis_d("Confidence Interval")+
  geom_point() +
  coord_flip()+
  theme_minimal()+
  theme(text = element_text(size = 12, family = "Calibri"), plot.title = element_text(hjust = 0.5, color = "#5c8761"))+
  labs(title = "Standard errors of the model in Plot 1 \n across 80% CI, 90% CI, and 95%CI", x = "Estimates", y = "Predictors")
  
```

```{r}
p
```



### Uncertainty 2(7)


```{r}
data<-rio::import(here::here("Bigdata.sav"))
```

```{r}
data$Condition <- factor(data$Condition, 
                         levels =c(0,1), 
                         labels = c("Control", "Treatment"))
```


```{r}
data$Intention<-data$In_End
data$Anxiety<-data$Mom_anxiety

```

```{r}
model7Mavo<-lm(Intention~Condition+NFC+Anxiety+Condition*Anxiety+Anxiety*NFC+Condition*NFC+Condition*NFC*Anxiety, data)


```


```{r}
un_model7Mavo<-broom::tidy(model7Mavo, conf.int = TRUE)

```



```{r}
un_model7Mavo<-subset(un_model7Mavo, term %nin% "(Intercept)")
un_model7Mavo$nicelabs <-prefix_strip(un_model7Mavo$term, "Condition")

```


```{r}
#adjust the size of the lines

p <- ggplot(un_model7Mavo, aes(nicelabs, estimate))+
    geom_hline(yintercept = 0,
             color = "cornflowerblue",
             linetype = 2) +
  geom_errorbar(aes(ymin = estimate + qnorm(.025)*std.error, 
                    ymax = estimate + qnorm(.975)*std.error,
                    color = "95%"),
                width = 0.2,
                size = 0.4) + 
  geom_errorbar(aes(ymin = estimate + qnorm(.05)*std.error, 
                    ymax = estimate + qnorm(.95)*std.error,
                    color = "90%"),
                width = 0.2,
                size = 0.6) + 
  geom_errorbar(aes(ymin = estimate + qnorm(.1)*std.error, 
                    ymax = estimate + qnorm(.9)*std.error,
                    color = "80%"),
                width = 0.2,
                size = 0.8)

```




```{r,eval=FALSE}

#Another version (not to be used here)

p <- ggplot(un_model7Mavo, aes(nicelabs, estimate))+
    geom_hline(yintercept = 0,
             color = "cornflowerblue",
             linetype = 2) +
  geom_errorbar(aes(ymin = estimate + qnorm(.025)*std.error, 
                    ymax = estimate + qnorm(.975)*std.error,
                    color = "95%"),
                width = 0.2,
                size = 0.8) + 
  geom_errorbar(aes(ymin = estimate + qnorm(.05)*std.error, 
                    ymax = estimate + qnorm(.95)*std.error,
                    color = "90%"),
                width = 0.2,
                size = 1.2) + 
  geom_errorbar(aes(ymin = estimate + qnorm(.1)*std.error, 
                    ymax = estimate + qnorm(.9)*std.error,
                    color = "80%"),
                width = 0.2,
                size = 1.6)


```


```{r}
p<-p+ scale_color_viridis_d("Confidence Interval")+
  geom_point() +
  coord_flip()+
  theme_minimal()+
  theme(text = element_text(size = 12, family = "Calibri"), plot.title = element_text(hjust = 0.5, color = "#5c8761"))+
  labs(title = "Standard errors of the model in Plot 1 \n across 80% CI, 90% CI, and 95%CI", x = "Estimates", y = "Predictors")
  
```

```{r}
p
```



```{r, eval = FALSE}
# This is another version not used here
p<-p+ scale_color_manual("Confidence Interval", 
                      values = c("#56a926",
                                 lighten("#56a926", .3),
                                 lighten("#56a926", .6)))+
  geom_point() +
  coord_flip()+
  theme_minimal()+
  theme(text = element_text(size = 12, family = "Calibri"), plot.title = element_text(hjust = 0.5, color = "#5c8761"))+
  labs(title = "Standard errors of the model in Plot 1 \n across 80% CI, 90% CI, and 95%CI", x = "Estimates", y = "Predictors")
```


### Uncertainty 3(2)

```{r}
data<-rio::import(here::here("Bigdata.sav"))
```

```{r}
data$Condition <- factor(data$Condition, 
                         levels =c(0,1), 
                         labels = c("Control", "Treatment"))
```


```{r}
data$Efficacy<-data$DVS_state
data$Avoidance<-data$Dad_avoidance

```

```{r}
model7Mavo<-lm(Efficacy~Condition+NFC+Avoidance+Condition*Avoidance+Avoidance*NFC+Condition*NFC+Condition*NFC*Avoidance, data)


```


```{r}
un_model7Mavo<-broom::tidy(model7Mavo, conf.int = TRUE)

```



```{r}
un_model7Mavo<-subset(un_model7Mavo, term %nin% "(Intercept)")
un_model7Mavo$nicelabs <-prefix_strip(un_model7Mavo$term, "Condition")

```


```{r}
#adjust the size of the lines

p <- ggplot(un_model7Mavo, aes(nicelabs, estimate))+
    geom_hline(yintercept = 0,
             color = "cornflowerblue",
             linetype = 2) +
  geom_errorbar(aes(ymin = estimate + qnorm(.025)*std.error, 
                    ymax = estimate + qnorm(.975)*std.error,
                    color = "95%"),
                width = 0.2,
                size = 0.4) + 
  geom_errorbar(aes(ymin = estimate + qnorm(.05)*std.error, 
                    ymax = estimate + qnorm(.95)*std.error,
                    color = "90%"),
                width = 0.2,
                size = 0.6) + 
  geom_errorbar(aes(ymin = estimate + qnorm(.1)*std.error, 
                    ymax = estimate + qnorm(.9)*std.error,
                    color = "80%"),
                width = 0.2,
                size = 0.8)

```



```{r}
p<-p+ scale_color_viridis_d("Confidence Interval")+
  geom_point() +
  coord_flip()+
  theme_minimal()+
  theme(text = element_text(size = 12, family = "Calibri"), plot.title = element_text(hjust = 0.5, color = "#5c8761"))+
  labs(title = "Standard errors of the model in Plot 1 \n across 80% CI, 90% CI, and 95%CI", x = "Estimates", y = "Predictors")
  
```

```{r}
p
```


### Uncertainty 3(3)

```{r}
data<-rio::import(here::here("Bigdata.sav"))
```

```{r}
data$Condition <- factor(data$Condition, 
                         levels =c(0,1), 
                         labels = c("Control", "Treatment"))
```


```{r}
data$Tools<-data$Empowerment_InternalTools
data$Avoidance<-data$Dad_avoidance

```

```{r}
model7Mavo<-lm(Tools~Condition+NFC+Avoidance+Condition*Avoidance+Avoidance*NFC+Condition*NFC+Condition*NFC*Avoidance, data)


```


```{r}
un_model7Mavo<-broom::tidy(model7Mavo, conf.int = TRUE)

```



```{r}
un_model7Mavo<-subset(un_model7Mavo, term %nin% "(Intercept)")
un_model7Mavo$nicelabs <-prefix_strip(un_model7Mavo$term, "Condition")

```


```{r}
#adjust the size of the lines

p <- ggplot(un_model7Mavo, aes(nicelabs, estimate))+
    geom_hline(yintercept = 0,
             color = "cornflowerblue",
             linetype = 2) +
  geom_errorbar(aes(ymin = estimate + qnorm(.025)*std.error, 
                    ymax = estimate + qnorm(.975)*std.error,
                    color = "95%"),
                width = 0.2,
                size = 0.4) + 
  geom_errorbar(aes(ymin = estimate + qnorm(.05)*std.error, 
                    ymax = estimate + qnorm(.95)*std.error,
                    color = "90%"),
                width = 0.2,
                size = 0.6) + 
  geom_errorbar(aes(ymin = estimate + qnorm(.1)*std.error, 
                    ymax = estimate + qnorm(.9)*std.error,
                    color = "80%"),
                width = 0.2,
                size = 0.8)

```




```{r}
p<-p+ scale_color_viridis_d("Confidence Interval")+
  geom_point() +
  coord_flip()+
  theme_minimal()+
  theme(text = element_text(size = 12, family = "Calibri"), plot.title = element_text(hjust = 0.5, color = "#5c8761"))+
  labs(title = "Standard errors of the model in Plot 1 \n across 80% CI, 90% CI, and 95%CI", x = "Estimates", y = "Predictors")
  
```

```{r}
p
```

### Uncertainty 3(5)


```{r}
data<-rio::import(here::here("Bigdata.sav"))
```

```{r}
data$Condition <- factor(data$Condition, 
                         levels =c(0,1), 
                         labels = c("Control", "Treatment"))
```


```{r}
data$Support<-data$Empowerment_ExpectationSupport
data$Avoidance<-data$Dad_avoidance

```

```{r}
model7Mavo<-lm(Support~Condition+NFC+Avoidance+Condition*Avoidance+Avoidance*NFC+Condition*NFC+Condition*NFC*Avoidance, data)


```


```{r}
un_model7Mavo<-broom::tidy(model7Mavo, conf.int = TRUE)

```



```{r}
un_model7Mavo<-subset(un_model7Mavo, term %nin% "(Intercept)")
un_model7Mavo$nicelabs <-prefix_strip(un_model7Mavo$term, "Condition")

```


```{r}
#adjust the size of the lines

p <- ggplot(un_model7Mavo, aes(nicelabs, estimate))+
    geom_hline(yintercept = 0,
             color = "cornflowerblue",
             linetype = 2) +
  geom_errorbar(aes(ymin = estimate + qnorm(.025)*std.error, 
                    ymax = estimate + qnorm(.975)*std.error,
                    color = "95%"),
                width = 0.2,
                size = 0.4) + 
  geom_errorbar(aes(ymin = estimate + qnorm(.05)*std.error, 
                    ymax = estimate + qnorm(.95)*std.error,
                    color = "90%"),
                width = 0.2,
                size = 0.6) + 
  geom_errorbar(aes(ymin = estimate + qnorm(.1)*std.error, 
                    ymax = estimate + qnorm(.9)*std.error,
                    color = "80%"),
                width = 0.2,
                size = 0.8)

```




```{r}
p<-p+ scale_color_viridis_d("Confidence Interval")+
  geom_point() +
  coord_flip()+
  theme_minimal()+
  theme(text = element_text(size = 12, family = "Calibri"), plot.title = element_text(hjust = 0.5, color = "#5c8761"))+
  labs(title = "Standard errors of the model in Plot 1 \n across 80% CI, 90% CI, and 95%CI", x = "Estimates", y = "Predictors")
  
```

```{r}
p
```

### Uncertainty 3(6)


```{r}
data<-rio::import(here::here("Bigdata.sav"))
```

```{r}
data$Condition <- factor(data$Condition, 
                         levels =c(0,1), 
                         labels = c("Control", "Treatment"))
```


```{r}
data$Compassion<-data$SelfCompassion
data$Avoidance<-data$Dad_avoidance

```

```{r}
model7Mavo<-lm(Compassion~Condition+NFC+Avoidance+Condition*Avoidance+Avoidance*NFC+Condition*NFC+Condition*NFC*Avoidance, data)


```


```{r}
un_model7Mavo<-broom::tidy(model7Mavo, conf.int = TRUE)

```



```{r}
un_model7Mavo<-subset(un_model7Mavo, term %nin% "(Intercept)")
un_model7Mavo$nicelabs <-prefix_strip(un_model7Mavo$term, "Condition")

```


```{r}
#adjust the size of the lines

p <- ggplot(un_model7Mavo, aes(nicelabs, estimate))+
    geom_hline(yintercept = 0,
             color = "cornflowerblue",
             linetype = 2) +
  geom_errorbar(aes(ymin = estimate + qnorm(.025)*std.error, 
                    ymax = estimate + qnorm(.975)*std.error,
                    color = "95%"),
                width = 0.2,
                size = 0.4) + 
  geom_errorbar(aes(ymin = estimate + qnorm(.05)*std.error, 
                    ymax = estimate + qnorm(.95)*std.error,
                    color = "90%"),
                width = 0.2,
                size = 0.6) + 
  geom_errorbar(aes(ymin = estimate + qnorm(.1)*std.error, 
                    ymax = estimate + qnorm(.9)*std.error,
                    color = "80%"),
                width = 0.2,
                size = 0.8)

```




```{r}
p<-p+ scale_color_viridis_d("Confidence Interval")+
  geom_point() +
  coord_flip()+
  theme_minimal()+
  theme(text = element_text(size = 12, family = "Calibri"), plot.title = element_text(hjust = 0.5, color = "#5c8761"))+
  labs(title = "Standard errors of the model in Plot 1 \n across 80% CI, 90% CI, and 95%CI", x = "Estimates", y = "Predictors")
  
```

```{r}
p
```

### Uncertainty 4(5)


```{r}
data<-rio::import(here::here("Bigdata.sav"))
```

```{r}
data$Condition <- factor(data$Condition, 
                         levels =c(0,1), 
                         labels = c("Control", "Treatment"))
```


```{r}
data$Support<-data$Empowerment_ExpectationSupport
data$Anxiety<-data$Dad_anxiety

```

```{r}
model7Mavo<-lm(Support~Condition+NFC+Anxiety+Condition*Anxiety+Anxiety*NFC+Condition*NFC+Condition*NFC*Anxiety, data)


```


```{r}
un_model7Mavo<-broom::tidy(model7Mavo, conf.int = TRUE)

```



```{r}
un_model7Mavo<-subset(un_model7Mavo, term %nin% "(Intercept)")
un_model7Mavo$nicelabs <-prefix_strip(un_model7Mavo$term, "Condition")

```


```{r}
#adjust the size of the lines

p <- ggplot(un_model7Mavo, aes(nicelabs, estimate))+
    geom_hline(yintercept = 0,
             color = "cornflowerblue",
             linetype = 2) +
  geom_errorbar(aes(ymin = estimate + qnorm(.025)*std.error, 
                    ymax = estimate + qnorm(.975)*std.error,
                    color = "95%"),
                width = 0.2,
                size = 0.4) + 
  geom_errorbar(aes(ymin = estimate + qnorm(.05)*std.error, 
                    ymax = estimate + qnorm(.95)*std.error,
                    color = "90%"),
                width = 0.2,
                size = 0.6) + 
  geom_errorbar(aes(ymin = estimate + qnorm(.1)*std.error, 
                    ymax = estimate + qnorm(.9)*std.error,
                    color = "80%"),
                width = 0.2,
                size = 0.8)

```




```{r}
p<-p+ scale_color_viridis_d("Confidence Interval")+
  geom_point() +
  coord_flip()+
  theme_minimal()+
  theme(text = element_text(size = 12, family = "Calibri"), plot.title = element_text(hjust = 0.5, color = "#5c8761"))+
  labs(title = "Standard errors of the model in Plot 1 \n across 80% CI, 90% CI, and 95%CI", x = "Estimates", y = "Predictors")
  
```

```{r}
p
```

### Uncertainty 5(3)


```{r}
data<-rio::import(here::here("Bigdata.sav"))
```

```{r}
data$Condition <- factor(data$Condition, 
                         levels =c(0,1), 
                         labels = c("Control", "Treatment"))
```


```{r}
data$Tools<-data$Empowerment_InternalTools


```

```{r}
model7Mavo<-lm(Tools~Condition+FI+ACE+Condition*ACE+ACE*FI+Condition*FI+Condition*FI*ACE, data)


```


```{r}
un_model7Mavo<-broom::tidy(model7Mavo, conf.int = TRUE)

```



```{r}
un_model7Mavo<-subset(un_model7Mavo, term %nin% "(Intercept)")
un_model7Mavo$nicelabs <-prefix_strip(un_model7Mavo$term, "Condition")

```


```{r}
#adjust the size of the lines

p <- ggplot(un_model7Mavo, aes(nicelabs, estimate))+
    geom_hline(yintercept = 0,
             color = "cornflowerblue",
             linetype = 2) +
  geom_errorbar(aes(ymin = estimate + qnorm(.025)*std.error, 
                    ymax = estimate + qnorm(.975)*std.error,
                    color = "95%"),
                width = 0.2,
                size = 0.4) + 
  geom_errorbar(aes(ymin = estimate + qnorm(.05)*std.error, 
                    ymax = estimate + qnorm(.95)*std.error,
                    color = "90%"),
                width = 0.2,
                size = 0.6) + 
  geom_errorbar(aes(ymin = estimate + qnorm(.1)*std.error, 
                    ymax = estimate + qnorm(.9)*std.error,
                    color = "80%"),
                width = 0.2,
                size = 0.8)

```




```{r}
p<-p+ scale_color_viridis_d("Confidence Interval")+
  geom_point() +
  coord_flip()+
  theme_minimal()+
  theme(text = element_text(size = 12, family = "Calibri"), plot.title = element_text(hjust = 0.5, color = "#5c8761"))+
  labs(title = "Standard errors of the model in Plot 1 \n across 80% CI, 90% CI, and 95%CI", x = "Estimates", y = "Predictors")
  
```

```{r}
p
```

### Uncertainty 5(5)



```{r}
data<-rio::import(here::here("Bigdata.sav"))
```

```{r}
data$Condition <- factor(data$Condition, 
                         levels =c(0,1), 
                         labels = c("Control", "Treatment"))
```


```{r}
data$Intention<-data$In_End
data$Avoidance<-data$Mom_avoidance

```

```{r}
model7Mavo<-lm(Intention~Condition+NFC+Avoidance+Condition*Avoidance+Avoidance*NFC+Condition*NFC+Condition*NFC*Avoidance, data)


```


```{r}
un_model7Mavo<-broom::tidy(model7Mavo, conf.int = TRUE)

```



```{r}
un_model7Mavo<-subset(un_model7Mavo, term %nin% "(Intercept)")
un_model7Mavo$nicelabs <-prefix_strip(un_model7Mavo$term, "Condition")

```


```{r}
#adjust the size of the lines

p <- ggplot(un_model7Mavo, aes(nicelabs, estimate))+
    geom_hline(yintercept = 0,
             color = "cornflowerblue",
             linetype = 2) +
  geom_errorbar(aes(ymin = estimate + qnorm(.025)*std.error, 
                    ymax = estimate + qnorm(.975)*std.error,
                    color = "95%"),
                width = 0.2,
                size = 0.4) + 
  geom_errorbar(aes(ymin = estimate + qnorm(.05)*std.error, 
                    ymax = estimate + qnorm(.95)*std.error,
                    color = "90%"),
                width = 0.2,
                size = 0.6) + 
  geom_errorbar(aes(ymin = estimate + qnorm(.1)*std.error, 
                    ymax = estimate + qnorm(.9)*std.error,
                    color = "80%"),
                width = 0.2,
                size = 0.8)

```




```{r}
p<-p+ scale_color_viridis_d("Confidence Interval")+
  geom_point() +
  coord_flip()+
  theme_minimal()+
  theme(text = element_text(size = 12, family = "Calibri"), plot.title = element_text(hjust = 0.5, color = "#5c8761"))+
  labs(title = "Standard errors of the model in Plot 1 \n across 80% CI, 90% CI, and 95%CI", x = "Estimates", y = "Predictors")
  
```

```{r}
p
```

### Uncertainty 6(4)



```{r}
data<-rio::import(here::here("Bigdata.sav"))
```

```{r}
data$Condition <- factor(data$Condition, 
                         levels =c(0,1), 
                         labels = c("Control", "Treatment"))
```


```{r}
data$Support<-data$Empowerment_ExpectationSupport


```

```{r}
model7Mavo<-lm(Support~Condition+FI+Fear+Condition*Fear+Fear*FI+Condition*FI+Condition*FI*Fear, data)


```


```{r}
un_model7Mavo<-broom::tidy(model7Mavo, conf.int = TRUE)

```



```{r}
un_model7Mavo<-subset(un_model7Mavo, term %nin% "(Intercept)")
un_model7Mavo$nicelabs <-prefix_strip(un_model7Mavo$term, "Condition")

```


```{r}
#adjust the size of the lines

p <- ggplot(un_model7Mavo, aes(nicelabs, estimate))+
    geom_hline(yintercept = 0,
             color = "cornflowerblue",
             linetype = 2) +
  geom_errorbar(aes(ymin = estimate + qnorm(.025)*std.error, 
                    ymax = estimate + qnorm(.975)*std.error,
                    color = "95%"),
                width = 0.2,
                size = 0.4) + 
  geom_errorbar(aes(ymin = estimate + qnorm(.05)*std.error, 
                    ymax = estimate + qnorm(.95)*std.error,
                    color = "90%"),
                width = 0.2,
                size = 0.6) + 
  geom_errorbar(aes(ymin = estimate + qnorm(.1)*std.error, 
                    ymax = estimate + qnorm(.9)*std.error,
                    color = "80%"),
                width = 0.2,
                size = 0.8)

```




```{r}
p<-p+ scale_color_viridis_d("Confidence Interval")+
  geom_point() +
  coord_flip()+
  theme_minimal()+
  theme(text = element_text(size = 12, family = "Calibri"), plot.title = element_text(hjust = 0.5, color = "#5c8761"))+
  labs(title = "Standard errors of the model in Plot 1 \n across 80% CI, 90% CI, and 95%CI", x = "Estimates", y = "Predictors")
  
```

```{r}
p
```


### Uncertainty 7(1)


```{r}
data<-rio::import(here::here("Bigdata.sav"))
```

```{r}
data$Condition <- factor(data$Condition, 
                         levels =c(0,1), 
                         labels = c("Control", "Treatment"))
```


```{r}
data$Knowledge<-data$Trauma_Knowledge
data$Anxiety<-data$Mom_anxiety

```

```{r}
model7Mavo<-lm(Knowledge~Condition+FI+Anxiety+Condition*Anxiety+Anxiety*FI+Condition*FI+Condition*FI*Anxiety, data)


```


```{r}
un_model7Mavo<-broom::tidy(model7Mavo, conf.int = TRUE)

```



```{r}
un_model7Mavo<-subset(un_model7Mavo, term %nin% "(Intercept)")
un_model7Mavo$nicelabs <-prefix_strip(un_model7Mavo$term, "Condition")

```


```{r}
#adjust the size of the lines

p <- ggplot(un_model7Mavo, aes(nicelabs, estimate))+
    geom_hline(yintercept = 0,
             color = "cornflowerblue",
             linetype = 2) +
  geom_errorbar(aes(ymin = estimate + qnorm(.025)*std.error, 
                    ymax = estimate + qnorm(.975)*std.error,
                    color = "95%"),
                width = 0.2,
                size = 0.4) + 
  geom_errorbar(aes(ymin = estimate + qnorm(.05)*std.error, 
                    ymax = estimate + qnorm(.95)*std.error,
                    color = "90%"),
                width = 0.2,
                size = 0.6) + 
  geom_errorbar(aes(ymin = estimate + qnorm(.1)*std.error, 
                    ymax = estimate + qnorm(.9)*std.error,
                    color = "80%"),
                width = 0.2,
                size = 0.8)

```




```{r}
p<-p+ scale_color_viridis_d("Confidence Interval")+
  geom_point() +
  coord_flip()+
  theme_minimal()+
  theme(text = element_text(size = 12, family = "Calibri"), plot.title = element_text(hjust = 0.5, color = "#5c8761"))+
  labs(title = "Standard errors of the model in Plot 1 \n across 80% CI, 90% CI, and 95%CI", x = "Estimates", y = "Predictors")
  
```

```{r}
p
```


### Uncertainty 7(2)


```{r}
data<-rio::import(here::here("Bigdata.sav"))
```

```{r}
data$Condition <- factor(data$Condition, 
                         levels =c(0,1), 
                         labels = c("Control", "Treatment"))
```


```{r}
data$Efficacy<-data$DVS_state
data$Anxiety<-data$Mom_anxiety

```

```{r}
model7Mavo<-lm(Efficacy~Condition+FI+Anxiety+Condition*Anxiety+Anxiety*FI+Condition*FI+Condition*FI*Anxiety, data)


```


```{r}
un_model7Mavo<-broom::tidy(model7Mavo, conf.int = TRUE)

```



```{r}
un_model7Mavo<-subset(un_model7Mavo, term %nin% "(Intercept)")
un_model7Mavo$nicelabs <-prefix_strip(un_model7Mavo$term, "Condition")

```


```{r}
#adjust the size of the lines

p <- ggplot(un_model7Mavo, aes(nicelabs, estimate))+
    geom_hline(yintercept = 0,
             color = "cornflowerblue",
             linetype = 2) +
  geom_errorbar(aes(ymin = estimate + qnorm(.025)*std.error, 
                    ymax = estimate + qnorm(.975)*std.error,
                    color = "95%"),
                width = 0.2,
                size = 0.4) + 
  geom_errorbar(aes(ymin = estimate + qnorm(.05)*std.error, 
                    ymax = estimate + qnorm(.95)*std.error,
                    color = "90%"),
                width = 0.2,
                size = 0.6) + 
  geom_errorbar(aes(ymin = estimate + qnorm(.1)*std.error, 
                    ymax = estimate + qnorm(.9)*std.error,
                    color = "80%"),
                width = 0.2,
                size = 0.8)

```




```{r}
p<-p+ scale_color_viridis_d("Confidence Interval")+
  geom_point() +
  coord_flip()+
  theme_minimal()+
  theme(text = element_text(size = 12, family = "Calibri"), plot.title = element_text(hjust = 0.5, color = "#5c8761"))+
  labs(title = "Standard errors of the model in Plot 1 \n across 80% CI, 90% CI, and 95%CI", x = "Estimates", y = "Predictors")
  
```

```{r}
p
```


### Uncertainty 8


```{r}
data<-rio::import(here::here("Bigdata.sav"))
```

```{r}
data$Condition <- factor(data$Condition, 
                         levels =c(0,1), 
                         labels = c("Control", "Treatment"))
```


```{r}
data$Knowledge<-data$Trauma_Knowledge


```

```{r}
model7Mavo<-lm(Knowledge~Condition+ACE+Condition*ACE, data)


```


```{r}
un_model7Mavo<-broom::tidy(model7Mavo, conf.int = TRUE)

```



```{r}
un_model7Mavo<-subset(un_model7Mavo, term %nin% "(Intercept)")
un_model7Mavo$nicelabs <-prefix_strip(un_model7Mavo$term, "Condition")

```


```{r}
#adjust the size of the lines

p <- ggplot(un_model7Mavo, aes(nicelabs, estimate))+
    geom_hline(yintercept = 0,
             color = "cornflowerblue",
             linetype = 2) +
  geom_errorbar(aes(ymin = estimate + qnorm(.025)*std.error, 
                    ymax = estimate + qnorm(.975)*std.error,
                    color = "95%"),
                width = 0.2,
                size = 0.4) + 
  geom_errorbar(aes(ymin = estimate + qnorm(.05)*std.error, 
                    ymax = estimate + qnorm(.95)*std.error,
                    color = "90%"),
                width = 0.2,
                size = 0.6) + 
  geom_errorbar(aes(ymin = estimate + qnorm(.1)*std.error, 
                    ymax = estimate + qnorm(.9)*std.error,
                    color = "80%"),
                width = 0.2,
                size = 0.8)

```




```{r}
p<-p+ scale_color_viridis_d("Confidence Interval")+
  geom_point() +
  coord_flip()+
  theme_minimal()+
  theme(text = element_text(size = 12, family = "Calibri"), plot.title = element_text(hjust = 0.5, color = "#5c8761"))+
  labs(title = "Standard errors of the model in Plot 1 \n across 80% CI, 90% CI, and 95%CI", x = "Estimates", y = "Predictors")
  
```

```{r}
p
```

### Uncertainty 9(1)


```{r}
data<-rio::import(here::here("Bigdata.sav"))
```

```{r}
data$Condition <- factor(data$Condition, 
                         levels =c(0,1), 
                         labels = c("Control", "Treatment"))
```


```{r}
data$Knowledge<-data$Trauma_Knowledge


```

```{r}
model7Mavo<-lm(Knowledge~Condition+Fear+Condition*Fear, data)


```


```{r}
un_model7Mavo<-broom::tidy(model7Mavo, conf.int = TRUE)

```



```{r}
un_model7Mavo<-subset(un_model7Mavo, term %nin% "(Intercept)")
un_model7Mavo$nicelabs <-prefix_strip(un_model7Mavo$term, "Condition")

```


```{r}
#adjust the size of the lines

p <- ggplot(un_model7Mavo, aes(nicelabs, estimate))+
    geom_hline(yintercept = 0,
             color = "cornflowerblue",
             linetype = 2) +
  geom_errorbar(aes(ymin = estimate + qnorm(.025)*std.error, 
                    ymax = estimate + qnorm(.975)*std.error,
                    color = "95%"),
                width = 0.2,
                size = 0.4) + 
  geom_errorbar(aes(ymin = estimate + qnorm(.05)*std.error, 
                    ymax = estimate + qnorm(.95)*std.error,
                    color = "90%"),
                width = 0.2,
                size = 0.6) + 
  geom_errorbar(aes(ymin = estimate + qnorm(.1)*std.error, 
                    ymax = estimate + qnorm(.9)*std.error,
                    color = "80%"),
                width = 0.2,
                size = 0.8)

```




```{r}
p<-p+ scale_color_viridis_d("Confidence Interval")+
  geom_point() +
  coord_flip()+
  theme_minimal()+
  theme(text = element_text(size = 12, family = "Calibri"), plot.title = element_text(hjust = 0.5, color = "#5c8761"))+
  labs(title = "Standard errors of the model in Plot 1 \n across 80% CI, 90% CI, and 95%CI", x = "Estimates", y = "Predictors")
  
```

```{r}
p
```

### Uncertainty 10(1)

```{r}
data<-rio::import(here::here("Bigdata.sav"))
```

```{r}
data$Condition <- factor(data$Condition, 
                         levels =c(0,1), 
                         labels = c("Control", "Treatment"))
```


```{r}
data$Knowledge<-data$Trauma_Knowledge


```

```{r}
model7Mavo<-lm(Knowledge~Condition+BPD+Condition*BPD, data)


```


```{r}
un_model7Mavo<-broom::tidy(model7Mavo, conf.int = TRUE)

```



```{r}
un_model7Mavo<-subset(un_model7Mavo, term %nin% "(Intercept)")
un_model7Mavo$nicelabs <-prefix_strip(un_model7Mavo$term, "Condition")

```


```{r}
#adjust the size of the lines

p <- ggplot(un_model7Mavo, aes(nicelabs, estimate))+
    geom_hline(yintercept = 0,
             color = "cornflowerblue",
             linetype = 2) +
  geom_errorbar(aes(ymin = estimate + qnorm(.025)*std.error, 
                    ymax = estimate + qnorm(.975)*std.error,
                    color = "95%"),
                width = 0.2,
                size = 0.4) + 
  geom_errorbar(aes(ymin = estimate + qnorm(.05)*std.error, 
                    ymax = estimate + qnorm(.95)*std.error,
                    color = "90%"),
                width = 0.2,
                size = 0.6) + 
  geom_errorbar(aes(ymin = estimate + qnorm(.1)*std.error, 
                    ymax = estimate + qnorm(.9)*std.error,
                    color = "80%"),
                width = 0.2,
                size = 0.8)

```




```{r}
p<-p+ scale_color_viridis_d("Confidence Interval")+
  geom_point() +
  coord_flip()+
  theme_minimal()+
  theme(text = element_text(size = 12, family = "Calibri"), plot.title = element_text(hjust = 0.5, color = "#5c8761"))+
  labs(title = "Standard errors of the model in Plot 1 \n across 80% CI, 90% CI, and 95%CI", x = "Estimates", y = "Predictors")
  
```

```{r}
p
```


### Uncertainty 11(1)


```{r}
data<-rio::import(here::here("Bigdata.sav"))
```

```{r}
data$Condition <- factor(data$Condition, 
                         levels =c(0,1), 
                         labels = c("Control", "Treatment"))
```


```{r}
data$Knowledge<-data$Trauma_Knowledge
data$Anxiety<-data$Mom_anxiety


```

```{r}
model7Mavo<-lm(Knowledge~Condition+Anxiety+Condition*Anxiety, data)


```


```{r}
un_model7Mavo<-broom::tidy(model7Mavo, conf.int = TRUE)

```



```{r}
un_model7Mavo<-subset(un_model7Mavo, term %nin% "(Intercept)")
un_model7Mavo$nicelabs <-prefix_strip(un_model7Mavo$term, "Condition")

```


```{r}
#adjust the size of the lines

p <- ggplot(un_model7Mavo, aes(nicelabs, estimate))+
    geom_hline(yintercept = 0,
             color = "cornflowerblue",
             linetype = 2) +
  geom_errorbar(aes(ymin = estimate + qnorm(.025)*std.error, 
                    ymax = estimate + qnorm(.975)*std.error,
                    color = "95%"),
                width = 0.2,
                size = 0.4) + 
  geom_errorbar(aes(ymin = estimate + qnorm(.05)*std.error, 
                    ymax = estimate + qnorm(.95)*std.error,
                    color = "90%"),
                width = 0.2,
                size = 0.6) + 
  geom_errorbar(aes(ymin = estimate + qnorm(.1)*std.error, 
                    ymax = estimate + qnorm(.9)*std.error,
                    color = "80%"),
                width = 0.2,
                size = 0.8)

```




```{r}
p<-p+ scale_color_viridis_d("Confidence Interval")+
  geom_point() +
  coord_flip()+
  theme_minimal()+
  theme(text = element_text(size = 12, family = "Calibri"), plot.title = element_text(hjust = 0.5, color = "#5c8761"))+
  labs(title = "Standard errors of the model in Plot 1 \n across 80% CI, 90% CI, and 95%CI", x = "Estimates", y = "Predictors")
  
```

```{r}
p
```




### Uncertainty 11(3)



```{r}
data<-rio::import(here::here("Bigdata.sav"))
```

```{r}
data$Condition <- factor(data$Condition, 
                         levels =c(0,1), 
                         labels = c("Control", "Treatment"))
```


```{r}
data$Tools<-data$Empowerment_InternalTools
data$Anxiety<-data$Mom_anxiety

```

```{r}
model7Mavo<-lm(Tools~Condition+Anxiety+Condition*Anxiety, data)


```


```{r}
un_model7Mavo<-broom::tidy(model7Mavo, conf.int = TRUE)

```



```{r}
un_model7Mavo<-subset(un_model7Mavo, term %nin% "(Intercept)")
un_model7Mavo$nicelabs <-prefix_strip(un_model7Mavo$term, "Condition")

```


```{r}
#adjust the size of the lines

p <- ggplot(un_model7Mavo, aes(nicelabs, estimate))+
    geom_hline(yintercept = 0,
             color = "cornflowerblue",
             linetype = 2) +
  geom_errorbar(aes(ymin = estimate + qnorm(.025)*std.error, 
                    ymax = estimate + qnorm(.975)*std.error,
                    color = "95%"),
                width = 0.2,
                size = 0.4) + 
  geom_errorbar(aes(ymin = estimate + qnorm(.05)*std.error, 
                    ymax = estimate + qnorm(.95)*std.error,
                    color = "90%"),
                width = 0.2,
                size = 0.6) + 
  geom_errorbar(aes(ymin = estimate + qnorm(.1)*std.error, 
                    ymax = estimate + qnorm(.9)*std.error,
                    color = "80%"),
                width = 0.2,
                size = 0.8)

```




```{r}
p<-p+ scale_color_viridis_d("Confidence Interval")+
  geom_point() +
  coord_flip()+
  theme_minimal()+
  theme(text = element_text(size = 12, family = "Calibri"), plot.title = element_text(hjust = 0.5, color = "#5c8761"))+
  labs(title = "Standard errors of the model in Plot 1 \n across 80% CI, 90% CI, and 95%CI", x = "Estimates", y = "Predictors")
  
```

```{r}
p
```


### Table 12(1)


```{r}
data<-rio::import(here::here("Bigdata.sav"))
```

```{r}
data$Condition <- factor(data$Condition, 
                         levels =c(0,1), 
                         labels = c("Control", "Treatment"))
```


```{r}
data$Knowledge<-data$Trauma_Knowledge
data$Anxiety<-data$Dad_anxiety


```

```{r}
model7Mavo<-lm(Knowledge~Condition+Anxiety+Condition*Anxiety, data)


```


```{r}
un_model7Mavo<-broom::tidy(model7Mavo, conf.int = TRUE)

```



```{r}
un_model7Mavo<-subset(un_model7Mavo, term %nin% "(Intercept)")
un_model7Mavo$nicelabs <-prefix_strip(un_model7Mavo$term, "Condition")

```


```{r}
#adjust the size of the lines

p <- ggplot(un_model7Mavo, aes(nicelabs, estimate))+
    geom_hline(yintercept = 0,
             color = "cornflowerblue",
             linetype = 2) +
  geom_errorbar(aes(ymin = estimate + qnorm(.025)*std.error, 
                    ymax = estimate + qnorm(.975)*std.error,
                    color = "95%"),
                width = 0.2,
                size = 0.4) + 
  geom_errorbar(aes(ymin = estimate + qnorm(.05)*std.error, 
                    ymax = estimate + qnorm(.95)*std.error,
                    color = "90%"),
                width = 0.2,
                size = 0.6) + 
  geom_errorbar(aes(ymin = estimate + qnorm(.1)*std.error, 
                    ymax = estimate + qnorm(.9)*std.error,
                    color = "80%"),
                width = 0.2,
                size = 0.8)

```




```{r}
p<-p+ scale_color_viridis_d("Confidence Interval")+
  geom_point() +
  coord_flip()+
  theme_minimal()+
  theme(text = element_text(size = 12, family = "Calibri"), plot.title = element_text(hjust = 0.5, color = "#5c8761"))+
  labs(title = "Standard errors of the model in Plot 1 \n across 80% CI, 90% CI, and 95%CI", x = "Estimates", y = "Predictors")
  
```

```{r}
p
```


Row {.tabset data-height=800}
---------------------

This is comments


### Figure1


```{r}
#issue adjust size of letters 
data<-rio::import(here::here("Bigdata.sav"))
```

```{r}
Plot1data <- data %>% select("Mom_avoidance", "NFC", "Condition", "In_End")

```


```{r}
model7MavoJN<-lm(In_End~Condition*NFC*Mom_avoidance, Plot1data)
```



```{r echo = FALSE, results= 'hide', fig.height=10, fig.width=19}
sim_slopes(model7MavoJN, pred = "Condition", modx = "NFC", mod2 = "Mom_avoidance", jnplot = TRUE, 
           mod2.labels = c("Mean of avoidance - SD", "Mean of avoidance", "Mean of avoidance + 1 SD"),
  
                
x.label = "Rational thinking pattern",
main.title = "3-ways interaction:condition, rational thinking, avoidance attachment")
 

 
           
           
        
           
```


Visualization {.storyboard}
=====

### Plot 1(Draft)


```{r}
data<-rio::import(here::here("Bigdata.sav"))
```

```{r}
#Create a new data frame for a correlation plot
data<-data %>% select(Condition, ACE, BPD, Fear, Mom_avoidance,
                      Mom_anxiety, Dad_avoidance, Dad_anxiety, NFC, 
                      FI, DVS_state, Trauma_Knowledge, Empowerment_Tradeoffs,
                      Empowerment_InternalTools, Empowerment_ExpectationSupport, 
                      DVS_state)
```


```{r}
#remove missing cases 
data<-na.omit(data)
```



```{r}
#create a correlation matrix
data_cor<-rcorr(as.matrix(data))
```


```{r, results='hide'}
#create a co-efficient column
data.frame(data_cor$r) %>% head() %>% kable()
```

```{r, results='hide'}
# p values column
data.frame(data_cor$P) %>% head() %>% kable()
```


```{r, results='hide'}
#n column
data.frame(data_cor$n) %>% head() %>% kable()
```


```{r}
cors <- function(df) {
   M <- Hmisc::rcorr(as.matrix(df))
   Mdf <- map(M, ~data.frame(.x))
  }
```


```{r, results='hide'}
cors(data) %>% first() %>% head %>% kable()
```


```{r, results='hide'}
cors(data) %>% 
  map(~rownames_to_column(.x, var = "measure1")) %>% 
  map(~pivot_longer(.x, -measure1, "measure2")) %>% 
  bind_rows(.id = "id") %>% 
  pivot_wider(names_from = id,  values_from = value) %>% 
  rename(p = P) %>% 
  mutate(sig_p = ifelse(p < .05,T, F),
         p_if_sig = ifelse(sig_p, p, NA), 
         r_if_sig = ifelse(sig_p, r, NA)) %>% 
  head() %>% 
  kable()
```


```{r, results='hide'}
#Turned format correlations to a function 
formatted_cors<-function(df){
  cors(df)%>%
    map(~rownames_to_column(.x, var="measure1")) %>%
    map(~pivot_longer(.x, -measure1, "measure2")) %>%
    bind_rows(.id = "id") %>%
    pivot_wider(names_from = id, values_from = value) %>%
    rename(p = P) %>%
    mutate(sig_p = ifelse(p < .05, T, F),
           p_if_sig = ifelse(sig_p, p, NA),
           r_if_sig = ifelse(sig_p, r, NA)) 
}

```


```{r, results = 'hide'}
formatted_cors(data) %>% head() %>% kable()
```


```{r, eval = FALSE}
#Plotting 
formatted_cors(data) %>% 
  ggplot(aes(x = measure1, y = measure2, fill = r))+
  geom_tile()+
  labs(x = NULL, y = NULL, fill = "Pearson's \n correlations", 
       title = "Correlations of key variables",
       subtitle = "Only significant correlations (*p < .05*) 
       are displayed in numbers")+
  scale_fill_viridis_c()+
  scale_x_discrete(expand=c(0,0)) +
  scale_y_discrete(expand=c(0,0),
                   labels = c("Condition", "ACE", "BPD", "Fear", "Avoidance(mother)",
                              "Anxiety (mother)", "Avoidance(father)", "Anxiety (father)",
                              "NFC", "FI", "Self-efficacy", "Knowledge", "Self-tools",
                              "Tradeoffs", "Support")) +
  theme(text=element_text(family="Calibri"),
        plot.title = element_text(face = 'bold', hjust = 0.5))
```

---
The first draft

This plot utilizes the function ___ from package ___ to create a correlation table of key variables in the current trauma-informed study. For the research context, please see the research background lab in the navigation bar. ALthough other correlation visualization packages, such as__, are available and easy to use, I selected to use ggplot as it is more flexible in terms of visualziation. A trade off relative to other correlaiton visualization paclages is data preparation for a ggplot (please see embded codes). The plot utilizes geom_title to display correlation strengths with lighter colors indicates higher pearson's coeffificient. The scale_fill_viridis_c color is also utilized such that the plot is colorblinded freindly. 

The plot posists certain issues. First, some of the y axis labels overlap and should be adjusted. Second, allthough the color might indiciate the stregnth of correlation coefficients for each pair of variables, viewers may better understand if correlation numbers are displayed. To decrease cognitive load, only significant numbers should be provided. In addition, the plot's legend extends beyond the _____. The legend thus could be moved to be under the plot or the plot should be resized. Some axis lables are depecited as abbreviations (e.g., ACE = adverse childhood experience, BPD = borderline personlity disorder traits) and this is not an issue as the Research Background tab in the navigation bar proides the detial about this. The issue listed are fixed in the final plot. 

### Figure 1 final

```{r, fig.height=10, fig.width=15}
#add significant correlations in table 

formatted_cors(data) %>%
  ggplot(aes(measure1, measure2, fill=r, label=round(r_if_sig,2))) +
  geom_tile() +
  labs(x = NULL, y = NULL, fill = "Pearson's\nCorrelation", title="Correlations of key variables",
       subtitle="Only significant Pearson's correlation coefficients shown") +
  scale_fill_gradient2(mid="#FBFEF9",low="#0C6291",high="#A63446", limits=c(-1,1)) +
  geom_text() +
  theme_classic() +
  scale_x_discrete(expand=c(0,0), labels = c("Condition", "ACE", "BPD", "Fear", "Avoidance(mother)", "Anxiety (mother)", "Avoidance(father)", "Anxiety (father)", "NFC", "FI", "Self-efficacy", "Knowledge", "Self-tools", "Tradeoffs", "Support")) +
  scale_y_discrete(expand=c(0,0), labels = c("Condition", "ACE", "BPD", "Fear", "Avoidance(mother)", "Anxiety (mother)", "Avoidance(father)", "Anxiety (father)", "NFC", "FI", "Self-efficacy", "Knowledge", "Self-tools", "Tradeoffs", "Support")) +
  theme(text=element_text(family="Calibri", size = 15), plot.title = element_text(hjust = 0.5), axis.text.x = element_text(angle = 45, vjust = 0.70))
```


---

The final version of figure 1 addresses the issues stated in the draft. Correlation coefficients were filled in the geom_tile only among the signifcant pair of variables. The color of the plot was adjusted to enable viewers to see the co-efficient numbers and comprehend the direction of the relationship between two variables easily. Correlations that are closed to zero are highlighed in a lighter color. Corelations that range from zero to one are highlighted in a red shade with darker color represents higher correlation coefficients (closer to 1). The blue shade represents correlation coefficients ranging from zero to minus 1 with darker color represents lower correlation co-efficients (closer to -1.)  The x axis labels was rotated at 45 degree angle such that they do not overlap. The legend was moved to the bottom of the plot such that it does not extend beyong the storyboard space. 

The results in the plot are consistent to trauma related theories. For exmaple, women with a higher level of adverse childhood experiemce (ACE) likely to have more borderline personality disorder (BPD) symptoms, 
### Plot 2 draft 

```{r}
data<-rio::import(here::here("Bigdata.sav"))
```

```{r}
data$Condition <- factor(data$Condition, 
                         levels =c(0,1), 
                         labels = c("Control", "Treatment"))
```


```{r}
data$Intention<-data$In_End
data$Anxiety<-data$Mom_anxiety

```

```{r}
model7Mavo<-lm(Intention~Condition+NFC+Anxiety+Condition*Anxiety+Anxiety*NFC+Condition*NFC+Condition*NFC*Anxiety, data)


```


```{r}
un_model7Mavo<-broom::tidy(model7Mavo, conf.int = TRUE)

```


```{r}
#adjust the size of the lines

p <- ggplot(un_model7Mavo, aes(term, estimate))+
    geom_hline(yintercept = 0,
             color = "cornflowerblue",
             linetype = 2) +
  geom_errorbar(aes(ymin = estimate + qnorm(.025)*std.error, 
                    ymax = estimate + qnorm(.975)*std.error,
                    color = "95%"),
                width = 0.2,
                size = 0.4) + 
  geom_errorbar(aes(ymin = estimate + qnorm(.05)*std.error, 
                    ymax = estimate + qnorm(.95)*std.error,
                    color = "90%"),
                width = 0.2,
                size = 0.6) + 
  geom_errorbar(aes(ymin = estimate + qnorm(.1)*std.error, 
                    ymax = estimate + qnorm(.9)*std.error,
                    color = "80%"),
                width = 0.2,
                size = 0.8)

```




```{r}
p
```

This plot depicts a draft version of standard errors of a three-way interaction between NFC (i.e., need for cognition), experimental conditions (control versus treatment),and anxiety attachments towards a mother figure. The plot posits some issues. First, estimates are on the y axis, which might be difficult to interpret. The y axis tick mark lables are a bit too numerically apart (i.e., 4 each). Regarding the x axis, the intercept couuld be excluded to decrease cognitive burdern among vieweres. Some labels such as Condition: NFC, which might be difficult to see in the current plot, are also not meaningful as viewers may not uncerstand whetehr the term refers to the treatment or control conditions. Variables on the x axis overlap. The legend is also labeled with the word 'color' rather than a meaningful term such as 'condifence interval.' The mentioned issues will be fixed in the final version of the draft. 



```{r}

un_model7Mavo<-subset(un_model7Mavo, term %nin% "(Intercept)")
un_model7Mavo$nicelabs <-prefix_strip(un_model7Mavo$term, "Condition")

```


```{r,eval=FALSE}

#Another version (not to be used here)

p <- ggplot(un_model7Mavo, aes(nicelabs, estimate))+
    geom_hline(yintercept = 0,
             color = "cornflowerblue",
             linetype = 2) +
  geom_errorbar(aes(ymin = estimate + qnorm(.025)*std.error, 
                    ymax = estimate + qnorm(.975)*std.error,
                    color = "95%"),
                width = 0.2,
                size = 0.8) + 
  geom_errorbar(aes(ymin = estimate + qnorm(.05)*std.error, 
                    ymax = estimate + qnorm(.95)*std.error,
                    color = "90%"),
                width = 0.2,
                size = 1.2) + 
  geom_errorbar(aes(ymin = estimate + qnorm(.1)*std.error, 
                    ymax = estimate + qnorm(.9)*std.error,
                    color = "80%"),
                width = 0.2,
                size = 1.6)


```


```{r}
p<-p+ scale_color_viridis_d("Confidence Interval")+
  geom_point() +
  coord_flip()+
  theme_minimal()+
  theme(text = element_text(size = 12, family = "Calibri"), plot.title = element_text(hjust = 0.5, color = "#5c8761"))+
  labs(title = "Standard errors of the interaction between conditions, NFC, and anxiety attachment  \n across 80% CI, 90% CI, and 95%CI", x = "Predictors", y = "Estimates")
  
```

```{r}
p
```

The final version of Plot2 addrsses the issues mentioned in the draft. The estimates were plotted on the x axis and the terms are plotted on the y axis with the label 'predictors', which enable viewers to interperet the plot easily. The grid background was removed, and the theme_minimal was introduced to exclude unmeaningful components (e.g., the grid color) and decrease cognitive load. A color-blinded friendly package (scale_color_viridis_d) was introduced to illustrate different confidence interval levels. The legend title is 'confidence interval,' which is more meaningful for interpretation than the term 'terms.' The estimates axis tick mark lables are narrower (2.5) relative to those of the draft version (4.0). 

Regarding the interpretation, the plot represents standard erros of the inetraction between treatment (exposure to trauma-informed messages), cognitive information processing, and anxiety attachments towards a mother figure. The interaction term's standard errors approxinately ranged from 0 - 0.625 at the 95% CI and are narrower than the range ta the 80% CI. The main effect of treatment posits closed to -.7.5 to sligthly more than zero at the 95% CI. The SE ranges is narrower at the 80% CI (approximately from -1.25 to close to  -6.25). The standard errors of the main effect of treatment is relatively high, indicating that the main effect of treatment might not be reliable and significant. The interaction effects' standard errors at every confident intervel level are quite low, indicating that the results are significant. The interpretation is consistent with the results shown in Table _ of the Results and Analysis tab. 

### Plot 3 draft 


```{r}

data<-rio::import(here::here("Bigdata.sav"))
```

```{r}
Plot1data <- data %>% select("Mom_avoidance", "NFC", "Condition", "In_End")

```



```{r}
Plot1data<-na.omit(Plot1data)
```


```{r}
 
Plot1data$Mom_avoidance <- cut(Plot1data$Mom_avoidance, breaks=c(1, 1.8, 2.72, 3.63, 5), include.lowest= TRUE)
```




```{r}
Plot1data$Condition <- factor(Plot1data$Condition,
levels = c(0,1),
labels = c("Control" , "Treatment"))
```


```{r}

Plot1data$Mom_avoidance <- factor(Plot1data$Mom_avoidance,
levels = c("[1,1.8]"   ,  "(1.8,2.72]"  ,"(2.72,3.63]" ,"(3.63,5]" ),
labels = c("Less than -1 SD", "-1SD to mean", "Mean to + 1SD", "More than+ 1SD"))




```


```{r, fig.width=4}


ggplot(Plot1data, aes(x  = NFC, y = In_End, color = Condition))+
  geom_point(alpha = 0.4, position = "jitter")+
  geom_smooth(method = "lm", se  = FALSE)+
  facet_wrap(~Mom_avoidance, scales = "free")+
  theme_minimal()+
  labs(x =  "Rational thinking", 
       y = "Leaving intention",  
       title = "The interaction effects of conditions, avoidance attachment, and \n thinking pattern on leaving intention", 
       subtitle = "Avoidance attachment scores towards a mother figure")+
  theme(text = element_text(family = "Calibri"), plot.title = element_text(face = "bold", hjust = 0.5, size = 12))
```

 
---

The plot reprensents the three-way interaction between conditions and rational thinking across different levels of avoidance attchment towards a mother figure. Although the plot is quite straightforward, it posits certain issues. First, the facet_wrap function allows viewers to see the interaciton of condition and rational thinking across levels of avoidance atatchment but it is unclear regarding the significant point of rational thinking in each facet. Adding a significant line and a label might be useful. Second, the title and subtitle are in the same color. Although the title is bold, some viewers may have a difficulty in separating the subtitle from the title. The scale colors are not colorblind friendly, and the legend labels extend beyond the story board. 


### Plot 3 final 



```{r}

data<-rio::import(here::here("Bigdata.sav"))
```

```{r}
Plot1data <- data %>% select("Mom_avoidance", "NFC", "Condition", "In_End")

```



```{r}
Plot1data<-na.omit(Plot1data)
```


```{r}
 
Plot1data$Mom_avoidance <- cut(Plot1data$Mom_avoidance, breaks=c(1, 1.8, 2.72, 3.63, 5), include.lowest= TRUE)
```




```{r}
Plot1data$Condition <- factor(Plot1data$Condition,
levels = c(0,1),
labels = c("Control" , "Treatment"))
```


```{r}

Plot1data$Mom_avoidance <- factor(Plot1data$Mom_avoidance,
levels = c("[1,1.8]"   ,  "(1.8,2.72]"  ,"(2.72,3.63]" ,"(3.63,5]" ),
labels = c("Less than -1 SD", "-1SD to mean", "Mean to + 1SD", "More than+ 1SD"))




```


```{r, fig.width=6}
txt_data <- data.frame(
  NFC = rep(3.99, 4),
  In_End = rep(4.5, 4),
  txt = c(rep("Sig", 3), ""),
  Mom_avoidance = levels(Plot1data$Mom_avoidance)
)

ggplot(Plot1data, aes(x  = NFC, y = In_End, color = Condition))+
  geom_point(alpha = 0.4, position = "jitter")+
  geom_smooth(method = "lm", se  = FALSE)+
  facet_wrap(~Mom_avoidance, scales = "free")+
  scale_y_continuous(limits = c(1,5))+
  scale_x_continuous(limits = c(1,5))+
   scale_color_manual(values = c("#E1BE6A", "#40B0A6"))+
  theme_minimal()+
  geom_text(aes(x = NFC, y = In_End, label = txt),
            hjust = 0,
            data = txt_data,
            inherit.aes = FALSE) +
  labs(x =  "Rational thinking", 
       y = "Leaving intention",  
       title = "The interaction effects of conditions, avoidance attachment, and \n thinking pattern on leaving intention", 
       subtitle = "Avoidance attachment scores towards a mother figure")+
  theme(text = element_text(family = "Calibri"), plot.title = element_text(face = "bold", hjust = 0.5, size = 12, color = "#26734d"))+
   geom_vline(data = filter(Plot1data, Mom_avoidance == "Less than -1 SD"), aes(xintercept = 3.93), color = "black", linetype = "dotted")+
  geom_vline(data = filter(Plot1data, Mom_avoidance == "-1SD to mean"), aes(xintercept = 3.93), color = "black", linetype = "dotted")+
   geom_vline(data = filter(Plot1data, Mom_avoidance == "Mean to + 1SD"), aes(xintercept = 3.93), color = "black", linetype = "dotted")
```

 
---
The final version of plot 3

Path diagrams {.storyboard}
=====

### Plot 1(Draft)

```{r}

data<-rio::import(here::here("Bigdata.sav"))
```


```{r, results ='hide'}
as.factor(data$Condition)
data$TIM<-data$Condition
data$Int<-data$In_End
data$Avoid<-data$Mom_avoidance
```



```{r, results = 'hide'}
model<-lm(Int~TIM*NFC*Avoid, data = data)
#issue-cant add label here lbls<-c("Condition", "NFC", "Avoidance", "Intention")

semPaths(model, "std", residuals =FALSE, sizeMan =  8, edge.label.cex = 1, intercepts = FALSE, nCharNodes = 10, theme = "colorblind", pastel = TRUE)




#title = "Three-ways interaction of TIM, NFC, and avoidance")#issue edge.label.cex overlaps)
```





Visualization (3 ways){.storyboard}
======

### Condition x NFC x Avoidance(mother) 

```{r}

data<-rio::import(here::here("Bigdata.sav"))
```

```{r}
Plot1data <- data %>% select("Mom_avoidance", "NFC", "Condition", "In_End")

```



```{r}
Plot1data<-na.omit(Plot1data)
```


```{r}
 
Plot1data$Mom_avoidance <- cut(Plot1data$Mom_avoidance, breaks=c(1, 1.8, 2.72, 3.63, 5), include.lowest= TRUE)
```




```{r}
Plot1data$Condition <- factor(Plot1data$Condition,
levels = c(0,1),
labels = c("Control" , "Treatment"))
```


```{r}

Plot1data$Mom_avoidance <- factor(Plot1data$Mom_avoidance,
levels = c("[1,1.8]"   ,  "(1.8,2.72]"  ,"(2.72,3.63]" ,"(3.63,5]" ),
labels = c("Less than -1 SD", "-1SD to mean", "Mean to + 1SD", "More than+ 1SD"))




```


```{r, fig.width=6}
txt_data <- data.frame(
  NFC = rep(3.99, 4),
  In_End = rep(4.5, 4),
  txt = c(rep("Sig", 3), ""),
  Mom_avoidance = levels(Plot1data$Mom_avoidance)
)

ggplot(Plot1data, aes(x  = NFC, y = In_End, color = Condition))+
  geom_point(alpha = 0.4, position = "jitter")+
  geom_smooth(method = "lm", se  = FALSE)+
  facet_wrap(~Mom_avoidance, scales = "free")+
  scale_y_continuous(limits = c(1,5))+
  scale_x_continuous(limits = c(1,5))+
   scale_color_manual(values = c("#E1BE6A", "#40B0A6"))+
  theme_minimal()+
  geom_text(aes(x = NFC, y = In_End, label = txt),
            hjust = 0,
            data = txt_data,
            inherit.aes = FALSE) +
  labs(x =  "Rational thinking", 
       y = "Leaving intention",  
       title = "The interaction effects of conditions, avoidance attachment, and \n thinking pattern on leaving intention", 
       subtitle = "Avoidance attachment scores towards a mother figure")+
  theme(text = element_text(family = "Calibri"), plot.title = element_text(face = "bold", hjust = 0.5, size = 12, color = "#26734d"))+
   geom_vline(data = filter(Plot1data, Mom_avoidance == "Less than -1 SD"), aes(xintercept = 3.93), color = "black", linetype = "dotted")+
  geom_vline(data = filter(Plot1data, Mom_avoidance == "-1SD to mean"), aes(xintercept = 3.93), color = "black", linetype = "dotted")+
   geom_vline(data = filter(Plot1data, Mom_avoidance == "Mean to + 1SD"), aes(xintercept = 3.93), color = "black", linetype = "dotted")
```

 

---

Comment about the plot



### Mother anxiety 




Visualization (2 way): {.storyboard}
======

### Adverse childhood experience


```{r}
data<-rio::import(here::here("Bigdata.sav"))
```

```{r}
data$Condition <-factor(data$Condition, 
                        levels = c(0,1),
                        labels = c("Control", "Treatment"))

```


```{r}

p<-ggplot(data, aes(x = ACE, y = Trauma_Knowledge, color = Condition))+
  geom_point(position = "jitter", alpha = 0.4)+
  geom_smooth(method = "lm", se = FALSE)+
   labs (x = "Adverse childhood experience", y = "Trauma knowledge")+
    transition_states(Condition, 
                      transition_length = 2,
                      state_length = 1)+
    enter_fade()+
    enter_grow()+
    exit_fade()+
    exit_shrink()+
    ease_aes()+
    ggtitle("The relationship between adverse childhoode experience \n and trauma knowledge for the {closest_state} condition")+
       theme_minimal()+
  theme(text = element_text(size = 12, family = "Calibri"), plot.title = element_text(face = 'bold', hjust = 0.5))

  
animate(p)
  
```

### Fear


```{r}
data<-rio::import(here::here("Bigdata.sav"))
```



```{r}
data$Condition <- factor(data$Condition, 
                         levels =c(0,1), 
                         labels = c("Control", "Treatment"))
```


```{r}
data$Fear<-factor(data$Fear,
                  levels=c(1,2,3,4,5,6), 
                  labels=c("1", "2", "3", "4", "5", "6"))
```



```{r}
ggplot(data, aes(Trauma_Knowledge, Fear, fill = Condition))+
  geom_density_ridges(alpha = 0.5)+
  scale_fill_manual(values = c("#f7786b", "#80ced6"))+
  scale_x_continuous(limits = c(1,5))+
  theme_minimal()+
  theme(text = element_text(family = "Calibri"), plot.title = element_text(hjust = 0.5, size = 10))+
  labs(x = "Trauma Knowledge", title = "Trauma knowledge across the number of fear aspects \n towards a partner and experimental conditions")
##issue cant install ikaebito and the ninja packages for ppt.and also NA
```


### BPD



```{r}
data<-rio::import(here::here("Bigdata.sav"))
```

```{r}
data$Condition <- factor(data$Condition, 
                         levels =c(0,1), 
                         labels = c("Control", "Treatment"))
```


```{r, eval = FALSE}
p<-ggplot(data, aes(BPD, Trauma_Knowledge, color = Condition))+
  geom_density2d(bins = 5, contour_var = "ndensity")+
  geom_point(position = "jitter")+
   scale_color_manual(values = c("#DD517F", "#E68E36"))+
  labs(x = "Borderline personality traits", y = "Trauma knowledge")+
  theme(text = element_text(size = 12, family = "Calibri"),
  plot.title = element_text(face = 'bold'))+
  transition_states(Condition, 
                      transition_length = 2,
                      state_length = 1)+
    enter_fade()+
    enter_grow()+
    exit_fade()+
    exit_shrink()+
    ease_aes()+
    ggtitle("The relationship between borderline personality disorder \n and trauma knowledge for the {closest_state} condition")+
       theme_minimal()+
    theme(text = element_text(size = 12, family = "Calibri"), plot.title = element_text(face = 'bold', hjust = 0.5))

#issue want to change the color of the title to match with the condition 
  
animate(p)
```



```{r}
#Try
p<-ggplot(data, aes(BPD, Trauma_Knowledge, color = Condition))+
 
  geom_density_2d_filled(alpha = 0.25)+
  geom_point(position = "jitter")+
   scale_color_manual(values = c("#DD517F", "#E68E36"))+
  labs(x = "Borderline personality traits", y = "Trauma knowledge")+
  theme(text = element_text(size = 12, family = "Calibri"),
  plot.title = element_text(face = 'bold'))+
  transition_states(Condition, 
                      transition_length = 2,
                      state_length = 1)+
    enter_fade()+
    enter_grow()+
    exit_fade()+
    exit_shrink()+
    ease_aes()+
    ggtitle("The relationship between borderline personality disorder \n and trauma knowledge for the {closest_state} condition")+
       theme_minimal()+
    theme(text = element_text(size = 12, family = "Calibri"), plot.title = element_text(face = 'bold', hjust = 0.5))

#issue want to change the color of the title to match with the condition and also not so sure about the interpretation of geom_dense 
  
animate(p)
```

---
Some comment about the plot 


Descriptive statistics {.storyboard}
======


```{r}
data<-rio::import(here::here("Bigdata.sav"))
```

### Density of BPD and ACE

```{r}
ggplot(data, aes(ACE, BPD))+
  stat_density2d(geom = "tile", aes(fill = ..density..), contour = FALSE)+
  theme_minimal()+
  theme(plot.title = element_text(hjust = 0.5), text = element_text(family = "Calibri"))+
  labs(x = "Adverse childhood experience", y = "Borderline personality traits", title = "Density of childhood trauma and borderline personality traits among participants")+
  scale_fill_viridis_c("Density")
```

### Boxplot education across conditions

```{r}
data<-rio::import(here::here("Bigdata.sav"))
```


```{r}
data$Condition<-factor(data$Condition, 
                       levels = c(0,1),
                       labels = c("Control", "Treatment"))
```

```{r}
data$Demo_Edu<-factor(data$Demo_Edu, 
                      levels = c(1, 2,3,4,5,6),
                      labels = c("Less than 8th grade", "High school graduate", "Bachelor's", "Master's", "Doctorate", "Professional school"))
```


```{r}
Edu_count <- data %>% group_by(Condition) %>% count(Demo_Edu)


eduplot<-ggplot(drop_na(Edu_count), aes(x = Demo_Edu, y = n))+
  geom_col(aes(fill = Condition),
                 position = "dodge")



```


```{r}
data$Demo_Age<-factor(data$Demo_Age, 
                      levels = c(1, 2,3,4,5,6),
                      labels = c("18-24", "25-34", "35-44", "45-54", "55-60", "More than 60"))
```



```{r}
Age_count <- data %>% group_by(Condition) %>% count(Demo_Age)


ageplot<-ggplot(drop_na(Age_count), aes(x = Demo_Age, y = n))+
  geom_col(aes(fill = Condition),
                 position = "dodge")



```


```{r}
panel_plot<-plot_grid(ageplot, eduplot, labels = c("A", "B"), ncol =2, nrow =1)
```

```{r}
panel_plot
```

### Correlations

```{r}
data<-rio::import(here::here("Bigdata.sav"))
```

```{r}
data<-data %>% select(Condition, ACE, BPD, Fear, Mom_avoidance, Mom_anxiety, Dad_avoidance, Dad_anxiety, NFC, FI, DVS_state, Trauma_Knowledge, Empowerment_Tradeoffs, Empowerment_InternalTools, Empowerment_ExpectationSupport, DVS_state, )
```


```{r}
colnames(data)<-c("Condition", "ACE", "BPD", "Fear", "Avoidance(mother)", "Anxiety (mother)", "Avoidance(father)", "Anxiety (father)", "NFC", "FI", "Self-efficacy", "Knowledge", "Self-tools", "Tradeoffs", "Support")
```



```{r}
data<-na.omit(data)
```



```{r}
data_cor<-rcorr(as.matrix(data))
```


```{r, results='hide'}
#check correlations
data.frame(data_cor$r) %>% head() %>% kable()
```

```{r, results='hide'}
# p values
data.frame(data_cor$P) %>% head() %>% kable()
```


```{r, results='hide'}
#n
data.frame(data_cor$n) %>% head() %>% kable()
```


```{r}
cors <- function(df) {
   M <- Hmisc::rcorr(as.matrix(df))
   Mdf <- map(M, ~data.frame(.x))
  }
```


```{r, results='hide'}
cors(data) %>% first() %>% head %>% kable()
```


```{r, results='hide'}
cors(data) %>% 
  map(~rownames_to_column(.x, var = "measure1")) %>% 
  map(~pivot_longer(.x, -measure1, "measure2")) %>% 
  bind_rows(.id = "id") %>% 
  pivot_wider(names_from = id,  values_from = value) %>% 
  rename(p = P) %>% 
  mutate(sig_p = ifelse(p < .05,T, F),
         p_if_sig = ifelse(sig_p, p, NA), 
         r_if_sig = ifelse(sig_p, r, NA)) %>% 
  head() %>% 
  kable()
```


```{r, results='hide'}
#Turned format correlations to a function 
formatted_cors<-function(df){
  cors(df)%>%
    map(~rownames_to_column(.x, var="measure1")) %>%
    map(~pivot_longer(.x, -measure1, "measure2")) %>%
    bind_rows(.id = "id") %>%
    pivot_wider(names_from = id, values_from = value) %>%
    rename(p = P) %>%
    mutate(sig_p = ifelse(p < .05, T, F),
           p_if_sig = ifelse(sig_p, p, NA),
           r_if_sig = ifelse(sig_p, r, NA)) 
}

```


```{r, results = 'hide'}
formatted_cors(data) %>% head() %>% kable()
```




```{r, eval = FALSE}
#Plotting 
formatted_cors(data) %>% 
  ggplot(aes(x = measure1, y = measure2, fill = r))+
  geom_tile()+
  labs(x = NULL, y = NULL, fill = "Pearson's \n correlations", title = "Correlations of key variables", subtitle = "Only significant correlations (*p < .05*) are displayed in numbers")+
  scale_fill_viridis_c()+
  scale_x_discrete(expand=c(0,0)) +
  scale_y_discrete(expand=c(0,0),labels = c("Condition", "ACE", "BPD", "Fear", "Avoidance(mother)", "Anxiety (mother)", "Avoidance(father)", "Anxiety (father)", "NFC", "FI", "Self-efficacy", "Knowledge", "Self-tools", "Tradeoffs", "Support")) +
  theme(text=element_text(family="Calibri"), plot.title = element_text(face = 'bold', hjust = 0.5))
```



```{r, fig.height=10, fig.width=15}
#add significant correlations in table 
##issue should I remove condition?

formatted_cors(data) %>%
  ggplot(aes(measure1, measure2, fill=r, label=round(r_if_sig,2))) +
  geom_tile() +
  labs(x = NULL, y = NULL, fill = "Pearson's\nCorrelation", title="Correlations of key variables",
       subtitle="Only significant Pearson's correlation coefficients shown") +
  scale_fill_gradient2(mid="#FBFEF9",low="#0C6291",high="#A63446", limits=c(-1,1)) +
  geom_text() +
  theme_classic() +
  scale_x_discrete(expand=c(0,0), labels = c("Condition", "ACE", "BPD", "Fear", "Avoidance(mother)", "Anxiety (mother)", "Avoidance(father)", "Anxiety (father)", "NFC", "FI", "Self-efficacy", "Knowledge", "Self-tools", "Tradeoffs", "Support")) +
  scale_y_discrete(expand=c(0,0), labels = c("Condition", "ACE", "BPD", "Fear", "Avoidance(mother)", "Anxiety (mother)", "Avoidance(father)", "Anxiety (father)", "NFC", "FI", "Self-efficacy", "Knowledge", "Self-tools", "Tradeoffs", "Support")) +
  theme(text=element_text(family="Calibri", size = 12), plot.title = element_text(hjust = 0.5), axis.text.x = element_text(angle = 45, vjust = 0.70))
```


